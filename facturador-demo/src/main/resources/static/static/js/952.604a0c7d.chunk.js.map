{"version":3,"file":"static/js/952.604a0c7d.chunk.js","mappings":"sTAKe,SAAeA,EAA9B,iDAAe,OAAf,oBAAe,WAAsBC,EAAsBC,GAA5C,IAGFC,EAHE,iEAGFA,EAHE,SAGMC,EAAeC,GACd,MAAVD,IACAE,EAAAA,EAAAA,IAAW,kBACNC,KAAKC,MAAMH,IADN,IAERI,SAAUR,EAAQS,KAAKD,SACvBE,KAAM,OACNC,OAAQ,IACRC,OAAQ,OAEVX,GAAS,GACTY,OAAOC,SAASC,UACbd,GAAS,EAAOG,KAb3BY,EAAAA,EAAAA,GAAK,OAAQ,eAAgB,CAAEC,KAAMX,KAAKY,UAAUlB,IAAYE,GADrD,kE,aCYA,SAASiB,IAEtB,IAAMC,GAAWC,EAAAA,EAAAA,MAIjB,GAC+EC,EAAAA,EAAAA,UAAS,QADxF,eAAOX,EAAP,KAAeY,EAAf,KAEA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAKA,GAA0CL,EAAAA,EAAAA,UAAS,IAAnD,eAAOd,EAAP,KAAiBoB,EAAjB,KACA,GAA0CN,EAAAA,EAAAA,UAAS,IAAnD,eAAOO,EAAP,KAAcC,EAAd,KACA,GAA0CR,EAAAA,EAAAA,UAAS,IAAnD,eAAOS,EAAP,KAAiBC,EAAjB,KACA,GAA0CV,EAAAA,EAAAA,YAA1C,eAAOW,EAAP,KAAeC,EAAf,KACA,GAA0CZ,EAAAA,EAAAA,UAAS,IAAnD,eAAOa,EAAP,KAAsBC,EAAtB,KACA,GAA0Cd,EAAAA,EAAAA,UAAS,IAAnD,eAAOe,EAAP,KAAkBC,EAAlB,KAGA,GAA0ChB,EAAAA,EAAAA,UAAS,IAAnD,eAAOiB,EAAP,KAAqBC,EAArB,KACA,GAA0ClB,EAAAA,EAAAA,UAAS,IAAnD,gBAAOmB,GAAP,MAAoBC,GAApB,MACA,IAA0CpB,EAAAA,EAAAA,UAAS,IAAnD,iBAAOqB,GAAP,MAAaC,GAAb,MACA,IAA0CtB,EAAAA,EAAAA,UAAS,IAAnD,iBAAOuB,GAAP,MAAoBC,GAApB,MACA,IAA0CxB,EAAAA,EAAAA,UAAS,IAAnD,iBAAOyB,GAAP,MAAoBC,GAApB,MA1B4C,0CA6D5C,oFAEQhD,EAAuB,CAC3BS,KAAM,CACJD,SAAUA,EACVqB,MAAOA,EACPE,SAAUA,EACVE,OAAQA,GAEVgB,OAAQ,CACNV,aAAcA,EACdE,YAAaA,GACbE,KAAMA,GACNE,YAAaA,KAGjBpB,GAAW,GACX1B,EAAOC,EAASkD,IAjBlB,4CA7D4C,sBAkF5C,SAASA,GAAeC,EAAa/C,GACnCqB,GAAW,GACP0B,GACFxB,GAAW,GACXqB,GAAe,IACf5B,EAAS,YACJ4B,GAAe5C,GAKxB,MACa,SAAXO,GAEA,UAAC,KAAD,CAAMyC,MAAM,qBAAqBC,SAhEnC,WAGE,GAFAf,EAAa,IAERgB,EAAAA,EAAAA,MAAY9C,EAAU8B,IACtBgB,EAAAA,EAAAA,MAAYzB,EAAOS,IACnBgB,EAAAA,EAAAA,SAAevB,EAAUO,GAC9B,OAAIP,IAAaI,EAAsBG,EAAa,wCAC/CgB,EAAAA,EAAAA,MAAYrB,EAAQK,IAEzBf,EAAU,YAuDV,WACE,SAAC,KAAD,CAAMgC,GAAG,IAAT,UAAa,SAAC,MAAD,OAEb,SAAC,KAAD,CAAOC,MAAM,SAAC,MAAD,IAAYC,MAAM,6CAC/BC,KAAM,CAAClD,EAAUoB,GAAc+B,UAAWL,EAAAA,EAAAA,MAAY9C,MACtD,SAAC,KAAD,CAAOgD,MAAM,SAAC,MAAD,IAAUC,MAAM,2CAC7BC,KAAM,CAAC7B,EAAOC,GAAW6B,UAAWL,EAAAA,EAAAA,MAAYzB,MAChD,SAAC,KAAD,CAAO2B,MAAM,SAAC,MAAD,IAAUC,MAAM,0BAC7BC,KAAM,CAAC3B,EAAUC,GAAc4B,KAAK,WAAWD,UAAWL,EAAAA,EAAAA,SAAevB,MACzE,SAAC,KAAD,CAAO0B,MAAM,qCAAkCC,KAAM,CAACvB,EAAeC,GACrEwB,KAAK,WAAWD,UAAW5B,IAAWI,KAEtC,SAAC,KAAD,CAAOsB,MAAM,iBAAiBI,KAAK,aAAaC,OAAQ5B,EAAW6B,IAAK9B,KAExE,SAAC,KAAD,CAAS2B,KAAK,QAAQI,QAAS3B,KAE/B,SAAC,KAAD,CAAQuB,KAAK,SAASK,KAAK,eAE3B,eAAGC,MAAO,CAACC,UAAU,SAAUC,OAAO,WAAtC,UACG,8BACD,SAAC,KAAD,CAAMb,GAAG,YAAYW,MAAO,CAACG,eAAe,QAA5C,4BAKO,WAAX1D,GAEA,UAAC,KAAD,CAAMyC,MAAM,qBAAqBC,SA9EnC,WAGE,OAFAL,GAAe,IAEVM,EAAAA,EAAAA,MAAYf,GACZe,EAAAA,EAAAA,YAAkBb,GAAaO,IAC/BM,EAAAA,EAAAA,KAAWX,SAEXW,EAAAA,EAAAA,KAAWT,GAAaG,KApDa,oCAuD1CsB,IAL8BtB,GAAc,oBACZ,mBAAhBP,GAAkC,sBAAoB,8BAFtE,EADuCO,GAAe,2DA2EtD,UACGxB,EAAS,MAAO,SAAC,MAAD,CAAe+C,QAAS,kBAAMhD,EAAU,YAEzD,SAAC,KAAD,CAAOiC,MAAM,SAAC,MAAD,IAAaC,MAAM,6BAA0BC,KAAM,CAACnB,EAAcC,GAC/EmB,UAAWL,EAAAA,EAAAA,MAAYf,MAEvB,SAAC,KAAD,CAAOiC,OAAO,+BAA4Bd,KAAM,CAACjB,GAAaC,IAC9D+B,QAAS,CAAC,wBAAyB,iBAAkB,oBAErD,SAAC,KAAD,CAAOhB,MAAO,UAA4B,mBAAhBhB,GAAmC,KAAO,MACpEoB,KAAK,+CAA4CH,KAAM,CAACf,GAAMC,IAC9De,UAAWL,EAAAA,EAAAA,KAAWX,IAAOa,MAAM,SAAC,MAAD,OAEnC,SAAC,KAAD,CAAOC,MAAM,+BAA4BI,KAAK,+CAC9CH,KAAM,CAACb,GAAaC,IAAiBU,MAAM,SAAC,MAAD,IAAcG,UAAWL,EAAAA,EAAAA,KAAWT,OAE/E,SAAC,KAAD,CAASe,KAAK,QAAQI,QAASjB,KAE9BrB,GAAS,SAAC,KAAD,CAASkC,KAAK,UAAUI,QAAO,kCAA6BnC,EAA7B,OACzCL,GAAS,SAAC,KAAD,KAAc,SAAC,KAAD,CAAQoC,KAAK,SAASK,KAAK,cAElD,O,qBCjKS,SAASS,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eACjDM,EAAKM,KAAKC,MAAMP,EAAME,GAG7B,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,GACnDA,EAAI,EAAIb,EAAQL,OAAOqB,IAAS,GAAIC,SAAQ,SAAUxB,GACpD,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAChCE,OAAOuB,0BAA4BvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAAWhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GAC5JE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAI/E,OAAOmB,E","sources":["pages/SignUp/services/signup.ts","pages/SignUp/SignUp.tsx","../javascript/esm|C:/Users/EPETN4/Desktop/Expiremento/facturador/facturador-masmas/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../javascript/esm|C:/Users/EPETN4/Desktop/Expiremento/facturador/facturador-masmas/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import mainAccount from '../models/mainAccount';\r\nimport ajax from 'interceptors/ajax';\r\nimport setSession from 'services/setSession';\r\n\r\n\r\nexport default async function signup(account: mainAccount, callback: Function): Promise<void> {\r\n    ajax(\"POST\", \"mainaccounts\", { body: JSON.stringify(account) }, respond);\r\n\r\n    function respond(state: number, data:string) {\r\n        if (state === 201) {\r\n            setSession({\r\n              ...JSON.parse(data),\r\n              username: account.user.username,\r\n              role: 'MAIN',\r\n              active: '0',\r\n              pasive: '0'\r\n            })\r\n            callback(true);\r\n            window.location.reload();\r\n        } else callback(false, data);\r\n    }\r\n} \r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\n//Componentes de formulario.\r\nimport { Form, Field, Image, Message, Button, Radio } from 'components/formComponents';\r\nimport { BiAt, BiChevronLeft, BiHash, BiHome, BiIdCard, BiKey, BiText, BiWallet } from \"react-icons/bi\";\r\nimport { Loading } from \"styledComponents\";\r\n\r\n//Relacionado a la cuenta.\r\nimport Valid from \"utilities/Valid\";\r\nimport signup from \"./services/signup\";\r\nimport mainAccount from './models/mainAccount';\r\n\r\n\r\n/**\r\n * Devuelve un formulario de 2 partes para crear una nueva cuenta y comerciante.\r\n */\r\nexport default function SignUp(): JSX.Element {\r\n\r\n  const navigate = useNavigate();\r\n  \r\n\r\n  //Controladores del estado del formulario.\r\n  const [active, setActive]: \r\n  [(\"user\"|\"trader\"), React.Dispatch<React.SetStateAction<(\"user\"|\"trader\")>>] = useState(\"user\");\r\n  const [sending, setSending] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  /*DATOS DEL FORMULARIO*****************************************************/\r\n\r\n  //Datos del usuario.\r\n  const [username, setUsername]           = useState(\"\");\r\n  const [email, setEmail]                 = useState(\"\");\r\n  const [password, setPassword]           = useState(\"\");\r\n  const [avatar, setAvatar]               = useState();\r\n  const [passwordMatch, setPasswordMatch] = useState(\"\");\r\n  const [userError, setUserError]         = useState(\"\");\r\n\r\n  //Datos del comerciante.\r\n  const [businessName, setBusinessName]   = useState(\"\");\r\n  const [vatCategory, setVatCategory]     = useState(\"\");\r\n  const [code, setCode]                   = useState(\"\");\r\n  const [grossIncome, setGrossIncome]     = useState(\"\");\r\n  const [traderError, setTraderError]     = useState(\"\");\r\n\r\n\r\n  /*VALIDACIÓN***************************************************************/\r\n\r\n  /**Valida los datos del usuario. */\r\n  function validateUser(): void {\r\n    setUserError(\"\");\r\n\r\n    if (!Valid.names(username, setUserError))     return;\r\n    if (!Valid.email(email, setUserError))        return; \r\n    if (!Valid.password(password, setUserError))  return;\r\n    if (password !== passwordMatch) return setUserError(\"Las contraseñas no coinciden\");\r\n    if (!Valid.image(avatar, setUserError))       return;\r\n\r\n    setActive(\"trader\");\r\n  };\r\n\r\n  /**Valida los datos del comerciante. */\r\n  function validateTrader(): void {\r\n    setTraderError(\"\");\r\n\r\n    if (!Valid.names(businessName)) return setTraderError(\"La razón social debe ser de entre 3 y 20 caracteres\");\r\n    if (!Valid.vatCategory(vatCategory, setTraderError))                                                            return;\r\n    if (!Valid.code(code)) return setTraderError\r\n      (`Ingrese un${vatCategory === \"Monotributista\"? \" C.U.I.L. válido\": \"a C.U.I.T. válida\"}`);\r\n    if (!Valid.code(grossIncome, setTraderError))                                                                   return;\r\n\r\n    //Si todo fue validado, se envían los datos.\r\n    submit();\r\n  };\r\n\r\n  /*ENVIAR Y RECIBIR*************************************************/\r\n\r\n  /**Envía al servidor los datos recolectados. */\r\n  async function submit(): Promise<void> {\r\n\r\n    const account: mainAccount = {\r\n      user: {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        avatar: avatar,\r\n      },\r\n      trader: {\r\n        businessName: businessName,\r\n        vatCategory: vatCategory,\r\n        code: code,\r\n        grossIncome: grossIncome,\r\n      }\r\n    }\r\n    setSending(true);\r\n    signup(account, handleResponse);\r\n  }\r\n\r\n  /**Maneja la respuesta recibida del servidor. */\r\n  function handleResponse(ok: boolean, data: string) {\r\n    setSending(false);\r\n    if (ok) {\r\n      setSuccess(true);\r\n      setTraderError(\"\");\r\n      navigate(\"/inicio\");\r\n    } else setTraderError(data);\r\n  }\r\n\r\n  /*FORMULARIO*****************************************************/\r\n\r\n  return (\r\n    active === \"user\" ?\r\n    \r\n    <Form title=\"Datos de la cuenta\" onSubmit={validateUser}>\r\n      <Link to=\"/\"><BiHome /></Link>\r\n          \r\n      <Field icon={<BiText />} label=\"¿Cómo quieres que te identifiquemos?\" \r\n      bind={[username, setUsername]} validator={Valid.names(username)} />\r\n      <Field icon={<BiAt />} label=\"Tu dirección de correo electrónico\"\r\n      bind={[email, setEmail]} validator={Valid.email(email)} />\r\n      <Field icon={<BiKey/>} label=\"Elige una contraseña\" \r\n      bind={[password, setPassword]} type=\"password\" validator={Valid.password(password)} />\r\n      <Field label=\"Vuelve a escribir la contraseña\" bind={[passwordMatch, setPasswordMatch]}\r\n      type=\"password\" validator={password===passwordMatch} />\r\n      \r\n      <Image label=\"Foto de perfil\" note=\"(opcional)\" setter={setAvatar} img={avatar} />\r\n            \r\n      <Message type=\"error\" message={userError} />\r\n\r\n      <Button type=\"submit\" text=\"Siguiente\" />\r\n\r\n      <p style={{textAlign:'center', cursor:'default'}}>\r\n        {'¿Ya tienes una cuenta? '}\r\n        <Link to=\"/ingresar\" style={{textDecoration:'none'}}>Ingresar</Link>\r\n      </p>\r\n\r\n    </Form>\r\n    :\r\n    active === \"trader\" ?\r\n\r\n    <Form title=\"Datos del comercio\" onSubmit={validateTrader}>\r\n      {sending? null : <BiChevronLeft onClick={() => setActive(\"user\")} /> }\r\n\r\n      <Field icon={<BiIdCard />}label=\"Escribe tu razón social\" bind={[businessName, setBusinessName]}\r\n      validator={Valid.names(businessName)} />\r\n\r\n      <Radio legend=\"Selecciona una categoría:\" bind={[vatCategory, setVatCategory]}\r\n      options={[\"Responsable Inscripto\", \"Monotributista\", \"Sujeto Exento\"]} />\r\n\r\n      <Field label={\"C.U.I.\" + (vatCategory === \"Monotributista\" ? \"L.\" : \"T.\")}\r\n      note=\"(si no eliges uno, se generará uno falso)\" bind={[code, setCode]}\r\n      validator={Valid.code(code)} icon={<BiHash />} />\r\n\r\n      <Field label=\"Número de ingresos brutos\" note=\"(si no eliges uno, se generará uno falso)\"\r\n      bind={[grossIncome, setGrossIncome]} icon={<BiWallet />} validator={Valid.code(grossIncome)} />\r\n\r\n      <Message type=\"error\" message={traderError} />\r\n\r\n      {success? <Message type=\"success\" message={`Se ha creado la cuenta \"${email}\"`}/>:\r\n      sending? <Loading /> : <Button type=\"submit\" text=\"Enviar\" />}\r\n    </Form>\r\n    : null\r\n  );\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["signup","account","callback","respond","state","data","setSession","JSON","parse","username","user","role","active","pasive","window","location","reload","ajax","body","stringify","SignUp","navigate","useNavigate","useState","setActive","sending","setSending","success","setSuccess","setUsername","email","setEmail","password","setPassword","avatar","setAvatar","passwordMatch","setPasswordMatch","userError","setUserError","businessName","setBusinessName","vatCategory","setVatCategory","code","setCode","grossIncome","setGrossIncome","traderError","setTraderError","trader","handleResponse","ok","title","onSubmit","Valid","to","icon","label","bind","validator","type","note","setter","img","message","text","style","textAlign","cursor","textDecoration","submit","onClick","legend","options","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}