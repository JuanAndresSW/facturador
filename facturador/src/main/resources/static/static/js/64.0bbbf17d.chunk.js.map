{"version":3,"file":"static/js/64.0bbbf17d.chunk.js","mappings":"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","sources":["pages/Home/services/getUserAvatar.ts","pages/Home/components/LoggedHeader/ProfileMenu/ProfileMenu.tsx","pages/Home/components/LoggedHeader/LoggedHeader.tsx","pages/Home/components/Subheader/Subheader.tsx","pages/Operation/components/PlusIcon.tsx","pages/Operation/utilities/constants/operationFilters.ts","pages/Operation/components/Filter.tsx","pages/Operation/utilities/getOperationFormTitle.ts","pages/Operation/utilities/isValidOperation.ts","utilities/constants.ts","pages/Operation/adapters/operationToJson.ts","pages/Operation/utilities/conversions/documentClassCodeToDocumentName.ts","pages/Operation/services/postOperation.ts","pages/Operation/adapters/jsonToListOfBranchesAndPoints.ts","pages/Operation/services/getListOfBranchesAndPoints.ts","pages/Operation/OperationForm.tsx","pages/Operation/utilities/conversions/numberToWords.ts","pages/Operation/components/documents/InvoiceLikeDocument/InvoiceLikeDocument.tsx","pages/Operation/components/documents/Ticket/Ticket.tsx","pages/Operation/adapters/jsonToDocument.ts","pages/Operation/services/getDocument.ts","pages/Operation/Document.tsx","pages/Operation/utilities/getColorByDocClassCode.ts","pages/Operation/components/DocumentHistory/DocumentHistoryItem/DocumentHistoryItem.tsx","pages/Operation/utilities/conversions/documentNameToClassCode.ts","pages/Operation/adapters/jsonToDocumentHistory.ts","pages/Operation/services/getDocumentHistory.ts","pages/Operation/components/DocumentHistory/DocumentHistory.tsx","pages/Operation/components/OperationSelectionItem/OperationSelectionItem.tsx","pages/Operation/OperationSelection.tsx","pages/Branches/adapters/branchToJson.ts","pages/Branches/services/postBranch.ts","pages/Branches/services/public/getListOfProvinces.ts","pages/Branches/services/public/getListOfCitiesByProvinceName.ts","assets/svg/default-logo.svg","assets/svg/default-photo.svg","pages/Branches/NewBranch.tsx","pages/Branches/services/deleteBranch.ts","pages/Branches/components/BranchBanner/BranchBanner.tsx","pages/Branches/services/postPointOfSale.ts","pages/Branches/services/getPointsOfSale.ts","pages/Branches/services/deletePointOfSale.ts","pages/Branches/components/BranchPoints/BranchPoints.tsx","pages/Branches/adapters/updatedBranchToJson.ts","pages/Branches/services/putBranch.ts","pages/Branches/services/getBranchLogo.ts","pages/Branches/EditBranch.tsx","pages/Branches/ManageBranch.tsx","pages/Branches/components/BranchPreviewItem/BranchPreviewItem.tsx","pages/Branches/adapters/jsonToListOfBranches.ts","pages/Branches/services/getBranches.ts","pages/Branches/Branches.tsx","pages/Home/Home.tsx","services/closeSession.ts","utilities/Valid.ts","utilities/conversions.ts"],"sourcesContent":["import Response from 'models/Response';\nimport ajax from 'ports/ajax';\nimport { base64ToBlob } from 'utilities/conversions';\n\n\n/**\n* Recupera un File correspondiente al avatar de usuario del propietario del token de acceso almacenado.\n*/\nexport default async function getUserAvatar(): Promise<Response> {\n\n    if (localStorage.getItem(\"avatar\")) \n    return new Response('', await base64ToBlob(localStorage.getItem(\"avatar\")), 200, true);\n\n    else {\n        const response = await ajax(\"GET\",\"users/\"+sessionStorage.getItem('username'), true);\n        return {...response, content: await base64ToBlob(response.content), ok: (response.status === 200 && response.content !== 'undefined')}\n    }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AiOutlineMore } from \"react-icons/ai\";\nimport OutsideClickHandler from 'react-outside-click-handler';\n\nimport closeSession from \"services/closeSession\";\nimport getUserAvatar from '../../../services/getUserAvatar';\n\nimport defaultImg from 'assets/svg/user.svg';\nimport './ProfileMenu.css';\nimport { Button } from \"components/formComponents\";\n\n\n\n/**Imágen de avatar de usuario con menú de opciones. */\nexport default function ProfileMenu(): JSX.Element {\n    //Imágen de avatar de usuario.\n    const [img, setImg] = useState(defaultImg);\n\n    //Pedir la imágen en el primer renderizado.\n    useEffect(() => {\n        getUserAvatar().then( response => {\n            if (response.ok && response.content.size>1) setImg(URL.createObjectURL(response.content));\n        });\n    }, []);\n\n    //Controlador de estado del menú.\n    const [active, setActive] = useState(false);\n\n    return (\n        <OutsideClickHandler onOutsideClick={() => setActive(false)}>\n            <div id=\"profile-menu\" onMouseDown={() => setActive(!active)}>\n                <img src={img}></img><AiOutlineMore/>\n            </div>\n\n            <div id=\"profile-menu-list\" className={active ? 'extended' : ''}>\n\n            <p>{sessionStorage.getItem(\"username\")?\n                sessionStorage.getItem(\"username\")\n                : \"???\"}\n            </p>\n            \n                <ul>\n                    <li><NavLink to=\"/cuenta\">Administrar la cuenta</NavLink></li>\n                    <li onClick={closeSession}><Button type=\"delete\">Cerrar sesión</Button></li>\n                </ul>\n            </div>\n        </OutsideClickHandler>\n    )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"assets/svg/logo.svg\";\nimport ProfileMenu from \"./ProfileMenu/ProfileMenu\";\nimport './LoggedHeader.css';\n\n/**\n * Un panel fijado en la parte superior de la pantalla.\n * El header cuando se ha detectado una sesión de usuario.\n */\nexport default function LoggedHeader(): JSX.Element {\n  \nreturn (\n  <header>\n    <Link to=\"/\" id=\"logo\">\n      <img src={logo} alt=\"\" /><p>facturador++</p>\n    </Link>\n    \n    <div id=\"logged-header\"><ProfileMenu /></div>\n  </header>\n);\n}\n","import React from \"react\";\nimport \"./Subheader.css\";\n\n/**Un encabezado con datos del patrimonio del comerciante. */\nexport default function Subheader(): JSX.Element {\n  return (\n\n    !(sessionStorage.getItem(\"actives\") && sessionStorage.getItem(\"passives\"))? null :\n    <div className=\"subheader\">\n      <p>activos: {sessionStorage.getItem(\"actives\")}</p>\n      <p>pasivos: {sessionStorage.getItem(\"passives\")}</p>\n      <p>{\"patrimonio neto: \"}\n        {parseFloat(sessionStorage.getItem(\"actives\")) +\n        parseFloat(sessionStorage.getItem(\"passives\"))}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiPlus } from \"react-icons/bi\";\n\n/**Un signo + con Link a la dirección especificada.*/\nconst PlusIcon: React.FC<{ link: string, title: string }> = ({ link, title }) => {\n    return (\n    <Link title={title} to={link} style={{ flex: .2, marginTop: \".3rem\", fontSize: \"1.2rem\", display: \"block\", textAlign: \"center\", color: \"#444\" }}>\n      <BiPlus />\n    </Link>)\n}\nexport default PlusIcon;\n\n","/**Especifica para cada propiedad de una operación los documentos que incluyen esa propiedad.\n * @example filters.property = \"OcFa\"; //La propiedad property es incluida en la orden de compra y la factura.*/\nconst operationFilters = Object.freeze({\n    senderCUIT:         \"OcRmFaTkNdNcRxCh\",\n    senderAddress:      \"OcRmFaTkNdNcRxPaCh\",\n    senderName:         \"OcRmFaTkNdNcRxRsPaCh\",\n    senderContact:      \"OcRmFaNdNcRxPa\",\n    senderVATCategory:  \"OcRmFaTkNdNcRx\",\n    startOfActivities:  \"OcRmFaNdNcRx\",\n\n    receiverCUIT:       \"OcRmFaNdNcRx\",\n    receiverName:       \"OcRmFaNdNcRxRsPaCh\",\n    receiverAddress:    \"OcRmFaNdNcRxPa\",\n    receiverVATCategory:\"OcRmFaNdNcRx\",\n    receiverPostalCode: \"OcRmFaNdNcRx\",\n    receiverCity:       \"OcRmFaNdNcRxCh\",\n\n    productTable:       \"OcRmFaTkNdNc\",\n    observations:       \"OcRm\",\n    seller:             \"Oc\",\n    sellConditions:     \"OcFaNdNc\",\n    deadline:           \"OcRsPa\",\n    shippingAddress:    \"Oc\",\n    carrier:            \"Oc\",\n    remittance:         \"FaNdNc\",\n    vat:                \"FaNdNc\",\n    paymentMethods:     \"Rx\",\n    paymentImputation:  \"Rx\",\n    detailOfValues:     \"Rx\",\n    paymentAddress:     \"Rx\",\n    paymentTime:        \"Rx\",\n    description:        \"RsPa\",\n    amount:             \"RePaCh\",\n    noProtest:          \"Pa\",\n    timeDelay:          \"Ch\",\n    crossed:            \"Ch\",\n});\n\nexport default operationFilters;","import React from 'react';\nimport { Cond } from 'components/wrappers';\nimport operationFilters from \"../utilities/constants/operationFilters\";\nimport {documentClassCode} from '../models/operation';\nimport documentProp from '../models/documentProp';\n\n/**Muestra el contenido sólo si la propiedad 'by' es incluida en la operación actual. */\nexport default function Filter({by, classCode, children}:{ by: documentProp, classCode: documentClassCode,children:  React.ReactNode }) {\n    return <Cond bool={operationFilters[by].includes(classCode)}>{children}</Cond>\n}","import { documentClassCode } from \"../models/operation\";\n\n\n/**Encuentra un título apropiado para el formulario de documentos comerciales.*/\nexport default function getOperationFormTitle(type: documentClassCode, toSend: boolean): string {\n    let title: string;\n    switch (type) {\n        case \"Fa\":  title = \"Nueva factura \";         break;\n        case \"Nd\":  title = \"Nueva nota de débito \";  break;\n        case \"Nc\":  title = \"Nueva nota de crédito \"; break;\n        case \"Tk\":  return  \"Nuevo ticket\";\n        case \"Oc\":  title = \"Nueva orden de compra \"; break;\n        case \"Rm\":  title = \"Nuevo remito \";          break;\n        case \"Rx\":  title = \"Nuevo recibo X \";        break;\n        case \"Rs\":  title = \"Nuevo recibo simple \";   break;\n        case \"Pa\":  title = \"Nuevo pagaré \";          break;\n        case \"Ch\":  title = \"Nuevo cheque \";          break;\n        default: return \"Parámetro 'type' inesperado: \"+type;\n    }\n    if (!toSend) return title + \"de entrada\";\n    else return title + \"de salida\";\n}","import Valid from 'utilities/Valid';\nimport operationFilters from \"./constants/operationFilters\";\nimport documentProp from '../models/documentProp';\nimport operation, { documentClassCode } from '../models/operation';\n\n\n/**Devuelve un boolean representando la validez de un objeto de operación. Envía un mensaje de error a una función.*/\nexport default function isValidOperation(operation: operation, documentClassCode: documentClassCode, setError: Function): boolean {\n\n    //Validar datos del comerciante.\n    if (operation.IDPointOfSale === undefined)\n    return no(\"Seleccione un punto de venta.\");\n\n\n    //Validar datos del tercero.\n    if (currentOperationIncludes(\"receiverCUIT\") && !Valid.CUIT(operation.thirdParty.CUIT, setError))\n    return false;\n\n    if (currentOperationIncludes(\"receiverName\") && !Valid.names(operation.thirdParty.name, setError))\n    return false;\n\n    if (currentOperationIncludes(\"receiverAddress\") && !Valid.address(operation.thirdParty.address))\n    return no(\"Ingrese una dirección entre 4 y 40 caracteres.\");\n\n    if (currentOperationIncludes(\"receiverVATCategory\") && !Valid.vatCategory(operation.thirdParty.VATCategory, setError))\n    return false;\n\n    if (currentOperationIncludes(\"receiverPostalCode\") && !Valid.postalCode(operation.thirdParty.postalCode, setError))\n    return false;\n\n    if (currentOperationIncludes(\"receiverCity\") && !Valid.address(operation.thirdParty.city))\n    return no(\"Ingrese una localidad de entre 4 y 40 caracteres.\");\n\n\n    //Validar datos de la operación.\n    if (currentOperationIncludes(\"productTable\")) {\n\n        for (let i = 0 ; i < operation.productTable.quantity.length ; i++) {\n            if (!operation.productTable.quantity[i] || operation.productTable.quantity[i] < 1 || operation.productTable.quantity[i] > 9999999)\n            return no(`La cantidad de la fila ${i+1} de la tabla de productos debe ser entre 1 y 9.999.999.`);\n        }\n        //TODO: verificar la cantidad máxima de caracteres apropiada que no cause errores.\n        for (let i = 0 ; i < operation.productTable.description.length ; i++) {\n            if (operation.productTable.description[i] === undefined || operation.productTable.description[i].length < 5 || operation.productTable.description[i].length > 20)\n            return no(`La descripción de la fila ${i+1} de la tabla de productos debe ser de de entre 5 y 20 caracteres.`);\n        }\n\n        for (let i = 0 ; i < operation.productTable.price.length ; i++) {\n            if (!operation.productTable.price[i] || operation.productTable.price[i] < 1 || operation.productTable.price[i] > 9999999)\n            return no(`El precio de la fila ${i+1} de la tabla de productos debe ser entre 1 y 9.999.999.`);\n        }\n    }\n\n    if (currentOperationIncludes(\"observations\") && operation.observations?.length > 30)\n    return no(\"Las observaciones no pueden exceder los 30 caracteres.\");\n\n    if (currentOperationIncludes(\"seller\") &&  operation.seller?.length > 20)\n    return no(\"El nombre del vendedor no puede exceder los 20 caracteres.\");\n\n    if (currentOperationIncludes(\"sellConditions\") && !Valid.sellConditions(operation.sellConditions, setError))\n    return false;\n\n    if (currentOperationIncludes(\"deadline\") && operation.deadline && !Valid.date(operation.deadline))\n    return no(\"Ingrese una fecha límite\");\n\n    if (currentOperationIncludes(\"shippingAddress\") && operation.shippingAddress?.length > 20)\n    return no(\"La dirección de entrega no debe superar los 20 caracteres.\");\n\n    if (currentOperationIncludes(\"carrier\") && operation.carrier?.length > 20)\n    return no(\"El nombre del transportista no debe superar los 20 caracteres.\");\n\n    if (currentOperationIncludes(\"paymentMethods\") && (\n       parseFloat(operation.receiptXTables.paymentMethods.cash)         <1\n    || parseFloat(operation.receiptXTables.paymentMethods.documents)    <1\n    || parseFloat(operation.receiptXTables.paymentMethods.check)        <1 \n    || parseFloat(operation.receiptXTables.paymentMethods.cash) + parseFloat(operation.receiptXTables.paymentMethods.documents) + parseFloat(operation.receiptXTables.paymentMethods.check) <= 0))\n    return no(\"El importe total no puede ser 0 o contener importes negativos.\");\n\n    if (currentOperationIncludes(\"paymentImputation\")) {\n\n        //TODO: cambiar todos los forEach a loops for normales.\n        operation.receiptXTables.paymentImputation.type.forEach((cell, index)=>{\n            if (cell.length < 1) return no(`El tipo en la fila ${index} de la tabla de imputación de pago no puede estar vacío.`);\n        });\n        operation.receiptXTables.paymentImputation.documentNumber.forEach((cell, index)=>{\n            if (cell.length !== 10) return no(`El número de documento en la fila ${index} de la tabla de imputación de pago debe ser de 10 caracteres.`);\n        });\n        operation.receiptXTables.paymentImputation.amount.forEach((cell, index)=>{\n            if (parseFloat(cell) <= 0) return no(`El monto en la fila ${index} de la tabla de imputación de pago debe ser mayor a 0.`);\n        });\n        operation.receiptXTables.paymentImputation.paid.forEach((cell, index)=>{\n            if (parseFloat(cell) <= 0 || parseFloat(cell) > parseFloat(operation.receiptXTables.paymentImputation.amount[index]))\n            return no(`El monto abonado en la fila ${index} de la tabla de imputación de pago debe ser mayor a 0 y no mayor al total.`);\n        });\n\n    }\n\n    if (currentOperationIncludes(\"detailOfValues\")) {\n\n        operation.receiptXTables.detailOfValues.type.forEach((cell, index)=>{\n            if (cell.length < 1) return no(`El tipo en la fila ${index} de la tabla de detalles de valores no puede estar vacío.`);\n        });\n        operation.receiptXTables.detailOfValues.bank.forEach((cell, index)=>{\n            if (cell.length < 1) return no(`El banco en la fila ${index} de la tabla de detalles de valores no puede estar vacío.`);\n        });\n        operation.receiptXTables.detailOfValues.documentNumber.forEach((cell, index)=>{\n            if (cell.length < 1) return no(`El número de documento en la fila ${index} de la tabla de detalles de valores no puede estar vacío.`);\n        });\n        operation.receiptXTables.detailOfValues.depositDate.forEach((cell, index)=>{\n            if (!Valid.date(cell)) return no(`La fecha en la fila ${index} de la tabla de detalles de valores no es válida.`);\n        });\n        operation.receiptXTables.detailOfValues.amount.forEach((cell, index)=>{\n            if (parseFloat(cell) <= 0) return no(`El monto en la fila ${index} de la tabla de detalles de valores debe ser mayor a 0.`);\n        });\n\n        if (operation.paymentAddress && !Valid.address(operation.paymentAddress))\n        return no(\"La dirección de pago ingresada debe ser de entre 4 y 40 caracteres.\");\n    }\n\n    if (currentOperationIncludes(\"description\") && (operation.description.length < 5 || operation.description.length > 20))\n    return no(\"La descripción debe ser de entre 5 y 20 caracteres\");\n\n    if (currentOperationIncludes(\"amount\") && operation.amount <= 0)\n    return no(\"El monto debe ser mayor a 0\");\n\n    if (currentOperationIncludes(\"timeDelay\") && operation.timeDelay && operation.timeDelay < 0 || operation.timeDelay > 365)\n    return no(\"La diferencia de tiempo debe ser de entre 0 y 365 días.\");\n\n    return true;\n\n    function no(messaje: string): false {setError(messaje);return false;}\n    function currentOperationIncludes(thisProperty: documentProp): boolean { return operationFilters[thisProperty].includes(documentClassCode); }\n}","export const IDTrader = parseInt(sessionStorage.getItem(\"IDTrader\"));\n","import operation, {documentClassCode} from \"../models/operation\";\nimport documentProp from \"../models/documentProp\";\nimport operationFilters from \"../utilities/constants/operationFilters\";\nimport {IDTrader} from \"utilities/constants\";\nimport { toFormattedCUIT } from \"utilities/conversions\";\n\n/**Convierte a el objeto de operación en un string JSON usado por el back-end para generar un documento.\n * @param operation     - El objeto de operación del cual se tomarán los datos.\n * @param documentClassCode - El string de dos caracteres que indica el documento al cual corresponde la operación.\n * @param toSend        - Indica si el documento está siendo enviado por el usuario (a un tercero) o por un tercero (al usuario).\n */\nexport default function operationToJson(operation: operation, documentClassCode: documentClassCode, toSend: boolean): string {\n\n    function currentOperationIncludes(thisProperty: documentProp): boolean { \n        return operationFilters[thisProperty].includes(documentClassCode); \n    }\n\n    const filteredOperation: any = {\n        IDTrader: IDTrader,\n        IDPointOfSale: operation.IDPointOfSale\n    };\n\n\n    //Datos del receptor como tercero.\n    if (toSend) {\n        if (currentOperationIncludes(\"receiverCUIT\"))\n        filteredOperation[\"receiverCode\"] =         toFormattedCUIT(operation.thirdParty.CUIT);\n\n        if (currentOperationIncludes(\"receiverName\"))\n        filteredOperation[\"receiverName\"] =         operation.thirdParty.name;\n\n        if (currentOperationIncludes(\"receiverAddress\"))\n        filteredOperation[\"receiverAddress\"] =      operation.thirdParty.address;\n\n        if (currentOperationIncludes(\"receiverVATCategory\"))\n        filteredOperation[\"receiverVatCategory\"] =  operation.thirdParty.VATCategory;\n\n        if (currentOperationIncludes(\"receiverPostalCode\"))\n        filteredOperation[\"receiverPostalCode\"] =   operation.thirdParty.postalCode;\n\n        if (currentOperationIncludes(\"receiverCity\"))\n        filteredOperation[\"receiverCity\"] =     operation.thirdParty.city;\n    }\n\n\n    //Datos del receptor emisor como tercero.\n    else {\n        if (currentOperationIncludes(\"senderCUIT\"))\n        filteredOperation[\"senderCode\"] =           toFormattedCUIT(operation.thirdParty.CUIT);\n\n        if (currentOperationIncludes(\"senderName\"))\n        filteredOperation[\"senderName\"] =           operation.thirdParty.name;\n\n        if (currentOperationIncludes(\"senderAddress\"))\n        filteredOperation[\"senderAddress\"] =        operation.thirdParty.address;\n\n        if (currentOperationIncludes(\"senderVATCategory\"))\n        filteredOperation[\"senderVatCategory\"] =    operation.thirdParty.VATCategory;\n\n        if (currentOperationIncludes(\"senderContact\"))\n        filteredOperation[\"senderContact\"] =        operation.thirdParty.contact;\n\n        if (currentOperationIncludes(\"startOfActivities\"))\n        filteredOperation[\"startOfActivities\"] =    operation.thirdParty.startOfActivities; \n    }\n\n    \n\n\n    //Datos de la operación.\n\n    if (currentOperationIncludes(\"productTable\"))\n    filteredOperation[\"products\"] = operation.productTable.description.map((_, i) => {\n        return {\n            quantity: operation.productTable.quantity[i],\n            price:    operation.productTable.price[i],\n            detail:   operation.productTable.description[i],\n        }\n    });\n\n    if (currentOperationIncludes(\"observations\"))\n    filteredOperation[\"observations\"] =        operation.observations;\n\n    if (currentOperationIncludes(\"seller\"))\n    filteredOperation[\"seller\"] =        operation.seller;\n\n    if (currentOperationIncludes(\"sellConditions\"))\n    filteredOperation[\"sellConditions\"] =        operation.sellConditions;\n\n    if (currentOperationIncludes(\"deadline\"))\n    filteredOperation[\"deadline\"] =        operation.deadline;\n\n    if (currentOperationIncludes(\"shippingAddress\"))\n    filteredOperation[\"shippingAddress\"] =        operation.shippingAddress;\n\n    if (currentOperationIncludes(\"carrier\"))\n    filteredOperation[\"carrier\"] =        operation.carrier;\n\n    if (currentOperationIncludes(\"remittance\"))\n    filteredOperation[\"remittance\"] =        operation.remittance;\n\n    if (currentOperationIncludes(\"vat\"))\n    filteredOperation[\"vat\"] =        operation.VAT\n\n    if (currentOperationIncludes(\"paymentMethods\")) {\n        filteredOperation[\"paymentMethods\"] =        operation.receiptXTables.paymentMethods;\n        filteredOperation[\"paymentImputation\"] =        operation.receiptXTables.paymentImputation;\n        filteredOperation[\"detailOfValues\"] =        operation.receiptXTables.detailOfValues;\n        filteredOperation[\"paymentAddress\"] =        operation.paymentAddress;\n        filteredOperation[\"paymentTime\"] =        operation.paymentTime;\n    }\n    \n    if (currentOperationIncludes(\"description\"))\n    filteredOperation[\"description\"] =        operation.description;\n\n    if (currentOperationIncludes(\"amount\"))\n    filteredOperation[\"amount\"] =        operation.amount;\n\n    if (currentOperationIncludes(\"noProtest\"))\n    filteredOperation[\"noProtest\"] =        operation.noProtest;\n\n    if (currentOperationIncludes(\"timeDelay\")) {\n        filteredOperation[\"timeDelay\"] =        operation.timeDelay;\n        filteredOperation[\"crossed\"] =        operation.crossed;\n    }\n\n\n    return JSON.stringify(filteredOperation);\n}","import { documentClassCode } from \"../../models/operation\";\n\n\n/**Convierte un código de clase a un nombre de documento.*/\nexport default function documentClassCodeToDocumentName(cc: documentClassCode, inSpanish = false) {\n    switch (cc) {\n        case \"Oc\":  return inSpanish ? \"Orden de compra\" : \"purchase-order\";\n        case \"Rm\":  return inSpanish ? \"Remito\" : \"remittance\";\n        case \"Fa\":  return inSpanish ? \"Factura\" : \"invoice\";\n        case \"Tk\":  return inSpanish ? \"Ticket\" : \"ticket\";\n        case \"Nd\":  return inSpanish ? \"Nota de débito\" : \"debit\";\n        case \"Nc\":  return inSpanish ? \"Nota de crédito\" : \"credit\";\n        case \"Rx\":  return inSpanish ? \"Recibo X\" : \"receipt-x\";\n        case \"Rs\":  return inSpanish ? \"Recibo\" : \"receipt\";\n        case \"Pa\":  return inSpanish ? \"Pagaré\" : \"promissory-note\";\n        case \"Ch\":  return inSpanish ? \"Cheque\" : \"check\";\n        default:    return \"\";\n    }\n}","import ajax from 'ports/ajax';\nimport Response from 'models/Response';\nimport operation from '../models/operation';\nimport operationToJson from \"../adapters/operationToJson\";\nimport documentClassCodeToDocumentName from \"../utilities/conversions/documentClassCodeToDocumentName\";\n\n/**Envía una operación para crear un documento comercial cualquiera. Devuelve el ID de la operación si fuese exitosa. */\nexport default async function postOperation(operation: operation): Promise<Response> {\n\n    const subrepository = \"FaNdNc\".includes(operation.documentClassCode)? \"/fulls\" : '';\n    const URL = `operations${subrepository}/${documentClassCodeToDocumentName(operation.documentClassCode)}`\n\n    const response = await ajax('POST', URL, true, operationToJson(operation, operation.documentClassCode, true))\n\n    return response;\n\n}","import { toFourDigitNumber } from \"utilities/conversions\";\n\nexport default function jsonToListOfBranchesAndPoints(json: string, usePointOfSaleNumberInsteadOfID=false): any[] {\n    const listOfBAP = JSON.parse(json);\n    \n    return listOfBAP.map((branch: any) => {   \n        return {\n          title: `${branch.city} ${branch.street} N°${branch.addressNumber}`,\n          value: branch.branchID,\n          subOptions: branch.pointsOfSale.map((point: any) => {\n            return {\n              title: `N°${toFourDigitNumber(point.pointOfSaleNumber)}`,\n              value: usePointOfSaleNumberInsteadOfID? point.pointOfSaleNumber : point.pointOfSaleId,\n            }\n          })\n        }\n    })\n}","import ajax from 'ports/ajax';\nimport { IDTrader } from 'utilities/constants';\nimport Response from 'models/Response';\nimport jsonToListOfBranchesAndPoints from \"../adapters/jsonToListOfBranchesAndPoints\";\n\n/**\n * Recupera un array de sucursales, cada uno con sus puntos de venta a nombre de la cuenta solicitante.\n */\nexport default async function getListOfBranchesAndPoints(usePointOfSaleNumberInsteadOfID=false): Promise<Response> {\n    const response = await ajax(\"GET\", `branches/traders/${IDTrader}/summary`, true);\n\n    if (response.status === 400) return {...response, content: []};\n    if (response.status === 200) return {...response, content: jsonToListOfBranchesAndPoints(response.content, usePointOfSaleNumberInsteadOfID)};\n    return response;\n    \n}","//React.\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n//Componentes del formulario.\nimport { BackArrow, Loading } from \"components/standalone\";\nimport { Button, DateTime, Field, Form, Message, Radio, Select, Switch, Table, Textarea } from \"components/formComponents\";\nimport { Cond, FlexDiv, Retractable, Section } from 'components/wrappers';\nimport { BiChevronsDown } from \"react-icons/bi\";\nimport PlusIcon from \"./components/PlusIcon\";\nimport Filter from \"./components/Filter\";\n\n//Utilidades.\nimport getOperationFormTitle from './utilities/getOperationFormTitle';\nimport isValidOperation from './utilities/isValidOperation';\nimport Valid from \"utilities/Valid\";\n//Servicios.\nimport postOperation from './services/postOperation';\nimport getListOfBranchesAndPoints from './services/getListOfBranchesAndPoints';\n//Tipos.\nimport operation, {documentClassCode} from './models/operation';\nimport documentIdentifier from \"./models/documentIdentifier\";\n\n\ntype props = { documentClassCode: documentClassCode };\n\n/**\n * Devuelve un formulario que recolecta los datos necesitados por el back-end para generar un documento comercial.\n * @param props.type Código del documento de dos caracteres.\n */\nexport default function OperationForm({ documentClassCode }: props): JSX.Element {\n\n  //Datos para mostrar el documento comercial generado existosamente.\n  const [IDOperation, setIDOperation] = useState();\n  const navigate  = useNavigate();\n  function seeDocument() {\n    navigate(`/inicio/operacion/documento?id=${IDOperation}&class=${documentClassCode}`)\n  }\n\n\n\n  //Comunicación con el servidor.\n  useEffect(()=>{ getListOfBranchesAndPoints().then( response => {\n    if (!response.ok) return;\n    setBranchesAndPoints(response.content)\n  })}, []);\n\n\n  async function generateOperation(): Promise<void> {\n    setError(\"\");\n\n    if (!isValidOperation(operation, documentClassCode, setError)) return;\n\n    setLoading(true);\n    const response = await postOperation(operation);\n    if (!response.ok) return setError(response.message);\n\n    setIDOperation(response.content);\n    setLoading(false);\n  }\n \n\n  //Datos de control del formulario.\n  const [error,               setError] =               useState(\"\");\n  const [loading,             setLoading] =             useState(false);\n  const [branchesAndPoints,   setBranchesAndPoints] =   useState();\n\n\n  //Datos de la operación.\n  const [operation, setOperation]: [operation, React.Dispatch<React.SetStateAction<operation>>] =\n  useState({\n    documentClassCode: documentClassCode,\n    IDBranch: -1,\n    IDPointOfSale: undefined,\n    thirdParty: {\n      CUIT:             '',\n      name:             '',\n      address:          '',\n      contact:          '',\n      VATCategory:      \"Responsable Inscripto\",\n      postalCode:       '',\n      city:         ''\n    },\n    productTable: {\n      quantity:         [0],\n      description:      [''],\n      price:            [0]\n    },\n    observations:       '',\n    seller:             '',\n    sellConditions:     \"Cuenta corriente\",\n    deadline:           '',\n    shippingAddress:     '',\n    carrier:            '',\n    remittance:       '',\n    VAT:                21,\n    receiptXTables: {\n      paymentMethods: {\n        check:          '0',\n        documents:      '0',\n        cash:           '0'\n      },\n      paymentImputation: {\n        type:           [\"\"],\n        documentNumber: ['0'],\n        amount:         ['0'],\n        paid:           ['0']\n      },\n      detailOfValues: {\n        type:           [''],\n        bank:           [''],\n        documentNumber: [''],\n        depositDate:    [''],\n        amount:         ['0']\n      }\n    },\n    paymentAddress:    '',\n    paymentTime:        '',\n    description:        '',\n    amount:             0,\n    noProtest:          false,\n    timeDelay:          0,\n    crossed:            false\n    \n  });\n\n\n  function setThirdParty(thirdParty: typeof operation.thirdParty) { setOperation({...operation, thirdParty: thirdParty}) }\n\n  function setProductTable(table: string[][]) {\n    const operationTemp = {...operation}\n    operationTemp.productTable.quantity =     table[0].map(quantity=>parseInt(quantity));\n    operationTemp.productTable.description =  table[1];\n    operationTemp.productTable.price =        table[2].map(quantity=>parseInt(quantity));\n    setOperation(operationTemp);\n  }\n  \n  \n  return (\n\n    <Form title={getOperationFormTitle(documentClassCode, true)} onSubmit={generateOperation}>\n\n      <BackArrow />\n      <Message type=\"error\" message={error} />\n\n      <Section label=\"Partícipes\">\n\n        <FlexDiv>\n          <Select \n          options={branchesAndPoints}\n          value={operation.IDBranch}\n          onChange={(ID: number) => setOperation({...operation, IDBranch: ID})} \n          subValue={operation.IDPointOfSale} \n          subOnChange={(ID: number) => setOperation({...operation, IDPointOfSale: ID})} \n          fallback=\"Crea una sucursal:\"\n          label=\"Elige una sucursal\" sublabel=\"Elige un punto de venta\" />\n          <PlusIcon title=\"nueva sucursal\" link={\"/inicio/sucursales/nuevo\"} />\n        </FlexDiv>\n \n        <BiChevronsDown style={{ margin: \"0 auto\", display: \"block\", cursor: \"default\", fontSize: \"2rem\", color: \"#333\" }} />\n\n      </Section>\n\n\n\n      <Cond bool={\"Tk\"!==documentClassCode}>\n      <Retractable label=\"Datos del tercero\" initial={false}>\n\n        <FlexDiv>\n\n        <Filter by=\"receiverName\" classCode={documentClassCode}>\n          <Field label=\"Nombre\"\n          bind={[operation.thirdParty.name, (name: string) => \n          setThirdParty({...operation.thirdParty, name: name})]} \n          validator={Valid.names(operation.thirdParty.name)} />\n        </Filter>\n\n        <Filter by=\"receiverCUIT\" classCode={documentClassCode}>\n          <Field label={operation.thirdParty.VATCategory === \"Consumidor Final\" ? \"C.U.I.L.\" : \"C.U.I.T.\"} bind={[operation.thirdParty.CUIT, (CUIT: string) => \n          setThirdParty({...operation.thirdParty, CUIT: CUIT})]} \n          validator={Valid.CUIT(operation.thirdParty.CUIT)} />\n        </Filter>\n\n        </FlexDiv>\n\n\n        <FlexDiv>\n\n        <Filter by=\"receiverAddress\" classCode={documentClassCode}>\n          <Field label=\"Domicilio\" note=\"(calle y altura)\" bind={[operation.thirdParty.address, (address: string) => \n          setThirdParty({...operation.thirdParty, address: address})]} validator={Valid.address(operation.thirdParty.address)} />\n        </Filter>\n\n        <Filter by=\"receiverCity\" classCode={documentClassCode}>\n          <Field label=\"Localidad\" bind={[operation.thirdParty.city, (city: string) => \n          setThirdParty({...operation.thirdParty, city: city})]} validator={Valid.address(operation.thirdParty.city)} />\n        </Filter>\n\n        <Filter by=\"receiverPostalCode\" classCode={documentClassCode}>\n        <Field label=\"Código postal\" type=\"number\" bind={[operation.thirdParty.postalCode, (postalCode: string) => \n          setThirdParty({...operation.thirdParty, postalCode: postalCode})]} validator={Valid.postalCode(operation.thirdParty.postalCode)} />\n        </Filter>\n\n        </FlexDiv>\n\n        <Filter by=\"receiverVATCategory\" classCode={documentClassCode}>\n          <Radio legend=\"Categoría\" options={[\"Responsable Monotributista\", \"Responsable Inscripto\", \"Consumidor Final\", \"Sujeto Exento\"]} \n          bind={[operation.thirdParty.VATCategory, (VATCategory: string) => \n          setThirdParty({...operation.thirdParty, VATCategory: VATCategory})]} />\n        </Filter>\n\n      </Retractable>\n      </Cond>\n\n      \n      <Retractable label=\"Datos de la operación\">\n\n        <Filter by=\"productTable\" classCode={documentClassCode}>\n          <Table\n            thead={[{ name: \"Cantidad\", type: \"number\" }, { name: \"Descripción\" }, { name: \"Precio\", type: \"number\" }]}\n            tbody={[operation.productTable.quantity, operation.productTable.description, operation.productTable.price]} \n            onChange={(newTable: string[][])=>setProductTable(newTable)} maxRows={10} />\n        </Filter>\n\n        <Filter by=\"vat\" classCode={documentClassCode}>\n          <Radio legend=\"IVA\" options={[21, 10, 4, 0]} bind={[operation.VAT, (VAT: string)=>setOperation({...operation, VAT: parseInt(VAT)})]} />\n        </Filter>\n        \n      </Retractable>\n\n\n\n      <Cond bool={\"OcRmFaNdNcRx\".includes(documentClassCode)}><Retractable label=\"Datos opcionales\">\n\n        <Filter by=\"sellConditions\" classCode={documentClassCode}>\n          <Radio legend=\"Condiciones de venta\" options={[\"Al contado\", \"Cuenta corriente\", \"Cheque\", \"Pagaré\", \"Otro\"]}\n          bind={[operation.sellConditions, (sellConditions: string)=>setOperation({...operation, sellConditions: sellConditions})]} />\n        </Filter>\n\n        <Filter by=\"remittance\" classCode={documentClassCode}>\n          <Field label=\"Remito N°\" bind={[operation.remittance, (remittance: string)=>setOperation({...operation, remittance: remittance})]}/>\n        </Filter>\n\n      </Retractable></Cond>\n\n      \n\n      <Message type=\"error\" message={error} />\n\n\n      <Cond bool={IDOperation !== undefined}>\n        <Message type=\"success\" message=\"Se ha creado el documento comercial\" />\n        \n        <FlexDiv justify=\"flex-end\">\n          <Button type=\"delete\" onClick={()=>seeDocument()}>Ver PDF</Button>\n        </FlexDiv>\n      </Cond>\n\n      <Cond bool={IDOperation === undefined}>\n        <FlexDiv justify=\"flex-end\"><Button type=\"submit\">Generar</Button></FlexDiv>\n      </Cond>\n\n      <Cond bool={loading}><Loading /></Cond>\n      \n    </Form>\n  );\n}\n\n\n/*\nBACKUP:\n\n\n<Cond bool={!\"RsCh\".includes(type)}>\n  <Field label=\"Teléfono\" type=\"tel\" bind={[phone, setPhone]} validator={Valid.phone(phone)} />\n</Cond>\n\n<FlexDiv>\n  <Field label=\"Email\" type=\"email\" bind={[email, setEmail]} validator={Valid.email(email)} />\n  <Cond bool={toSend}>\n    \n  </Cond>\n</FlexDiv>\n\n\n<FlexDiv>\n\n        <Cond bool={\"RsPa\".includes(type)}>\n          <DateTime label=\"Fecha límite\" value={deadline} onChange={setDeadline} />\n        </Cond>\n\n        <Cond bool={\"Pa\"===type}>\n          <Switch label=\"Sin protesto\" value={noProtest} setter={setNoProtest} />\n        </Cond>\n\n        </FlexDiv>\n\n        \n\n        <Cond bool={\"Rx\"===type}>\n          <Table label=\"Forma de pago\"\n            thead={[{ name: \"Cheque\", type: \"number\" }, { name: \"Documentos\", type: \"number\" }, { name: \"Efectivo\", type: \"number\" }]}\n            tbody={RxAmounts} onChange={setRxAmounts} maxRows={1} />\n\n          <Table label=\"Imputación del pago\"\n            thead={[{ name: \"Tipo\" }, { name: \"Número\", type: \"number\" }, { name: \"Importe\", type: \"number\" }, { name: \"Abonado\", type: \"number\" }]}\n            tbody={RxInvoices} onChange={setRxInvoices} maxRows={3} />\n\n          <Table label=\"Detalle de valores\"\n            thead={[{ name: \"Tipo\" }, { name: \"Banco\" }, { name: \"Número\" }, { name: \"Fecha de depósito\", type: \"date\" }, { name: \"Importe\", type: \"number\" }]}\n            tbody={RxDetails} onChange={setRxDetails} maxRows={3} />\n        </Cond>\n\n\n        <FlexDiv>\n        <Cond bool={\"RsPa\".includes(type)}>\n          <Field label=\"Descripción\" bind={[description, setDescription]} />\n        </Cond>\n\n        <Cond bool={\"RsPaCh\".includes(type)}>\n          <Field type=\"number\" label=\"Cantidad\" bind={[amount, setAmount]} />\n        </Cond>\n        </FlexDiv>\n\n\n        <Cond bool={\"Ch\"===type}>\n          <Field label=\"Diferencia de tiempo en días\" type=\"number\" bind={[timeDelay, setTimeDelay]} />\n          <Switch label=\"Cruzado\" value={crossed} setter={setCrossed} />\n        </Cond>\n\n\n        <Cond bool={\"OcRm\".includes(type)}>\n          <Textarea label=\"Observaciones\" bind={[observations, setObservations]} />\n        </Cond>\n\n        <Cond bool={\"Oc\".includes(type)}>\n          <Field label=\"Vendedor de preferencia\" bind={[seller, setSeller]} />\n        </Cond>\n\n\n        <Cond bool={\"Oc\"===type}>\n          <FlexDiv>\n            <DateTime label=\"Fecha límite\" nonPast value={deadline} onChange={setDeadline} />\n            <Field label=\"Lugar de entrega\" bind={[placeOfDelivery, setPlaceOfDelivery]} />\n            <Field label=\"Transportista\" bind={[carrier, setCarrier]} />\n          </FlexDiv>\n        </Cond>\n\n        <Cond bool={\"Rx\"===type}>\n          <FlexDiv>\n            <Field label=\"Domicilio de pago\" bind={[paymentAddress, setPaymentAddress]} />\n            <DateTime label=\"Horario de pago\" type=\"time\" value={paymentTime} onChange={setPaymentTime} />\n          </FlexDiv>\n        </Cond>\n\n*/\n","/************************************************************\n* NumeroALetras\n* The MIT License (MIT) \n* @author Rodolfo Carmona\n* @contributor Jean (jpbadoino@gmail.com)\n* @editor Juan Andrés Dos Santos\n*/\nfunction Unidades(num: number){\n    switch(num) {\n        case 1: return \"UN\";\n        case 2: return \"DOS\";\n        case 3: return \"TRES\";\n        case 4: return \"CUATRO\";\n        case 5: return \"CINCO\";\n        case 6: return \"SEIS\";\n        case 7: return \"SIETE\";\n        case 8: return \"OCHO\";\n        case 9: return \"NUEVE\";\n        default: return \"\";\n    }\n}\n\nfunction Decenas(num: number){\n    const decena = Math.floor(num/10);\n    const unidad = num - (decena * 10);\n\n    switch(decena) {\n        case 1:\n            switch(unidad) {\n                case 0: return \"DIEZ\";\n                case 1: return \"ONCE\";\n                case 2: return \"DOCE\";\n                case 3: return \"TRECE\";\n                case 4: return \"CATORCE\";\n                case 5: return \"QUINCE\";\n                default: return \"DIECI\" + Unidades(unidad);\n            }\n        case 2:\n            switch(unidad) {\n                case 0: return \"VEINTE\";\n                default: return \"VEINTI\" + Unidades(unidad);\n            }\n        case 3: return DecenasY(\"TREINTA\", unidad);\n        case 4: return DecenasY(\"CUARENTA\", unidad);\n        case 5: return DecenasY(\"CINCUENTA\", unidad);\n        case 6: return DecenasY(\"SESENTA\", unidad);\n        case 7: return DecenasY(\"SETENTA\", unidad);\n        case 8: return DecenasY(\"OCHENTA\", unidad);\n        case 9: return DecenasY(\"NOVENTA\", unidad);\n        case 0: return Unidades(unidad);\n    }\n}\n\nfunction DecenasY(strSin: string, numUnidades: number) {\n    if (numUnidades > 0)\n    return strSin + \" Y \" + Unidades(numUnidades)\n    return strSin;\n}\n\nfunction Centenas(num: number) {\n    const centenas = Math.floor(num / 100);\n    const decenas = num - (centenas * 100);\n\n    switch(centenas) {\n        case 1:\n            if (decenas > 0)\n                return \"CIENTO \" + Decenas(decenas);\n            return \"CIEN\";\n        case 2: return \"DOSCIENTOS \" + Decenas(decenas);\n        case 3: return \"TRESCIENTOS \" + Decenas(decenas);\n        case 4: return \"CUATROCIENTOS \" + Decenas(decenas);\n        case 5: return \"QUINIENTOS \" + Decenas(decenas);\n        case 6: return \"SEISCIENTOS \" + Decenas(decenas);\n        case 7: return \"SETECIENTOS \" + Decenas(decenas);\n        case 8: return \"OCHOCIENTOS \" + Decenas(decenas);\n        case 9: return \"NOVECIENTOS \" + Decenas(decenas);\n    }\n\n    return Decenas(decenas);\n}\n\nfunction Seccion(num: number, divisor: number, strSingular: string, strPlural: string) {\n    const cientos = Math.floor(num / divisor)\n    const resto = num - (cientos * divisor)\n\n    let letras = \"\";\n\n    if (cientos > 0)\n        if (cientos > 1)\n        letras = Centenas(cientos) + \" \" + strPlural;\n        else\n        letras = strSingular;\n\n    if (resto > 0)\n    letras += \"\";\n\n    return letras;\n}\n\nfunction Miles(num: number) {\n    const divisor = 1000;\n    const cientos = Math.floor(num / divisor)\n    const resto = num - (cientos * divisor)\n\n    const strMiles = Seccion(num, divisor, \"UN MIL\", \"MIL\");\n    const strCentenas = Centenas(resto);\n\n    if(strMiles == \"\")\n        return strCentenas;\n\n    return strMiles + \" \" + strCentenas;\n}\n\nfunction Millones(num: number) {\n    const divisor = 1000000;\n    const cientos = Math.floor(num / divisor)\n    const resto = num - (cientos * divisor)\n\n    const strMillones = Seccion(num, divisor, \"UN MILLON DE\", \"MILLONES DE\");\n    const strMiles = Miles(resto);\n\n    if(strMillones == \"\")\n        return strMiles;\n\n    return strMillones + \" \" + strMiles;\n}\n\nexport default function numberToWords(num: number) {\n    const data = {\n        numero: num,\n        enteros: Math.floor(num),\n        centavos: (((Math.round(num * 100)) - (Math.floor(num) * 100))),\n        letrasCentavos: \"\",\n        letrasMonedaPlural: 'Pesos',//\"PESOS\", 'Dólares', 'Bolívares', 'etcs'\n        letrasMonedaSingular: 'Peso', //\"PESO\", 'Dólar', 'Bolivar', 'etc'\n\n        letrasMonedaCentavoPlural: \"CENTAVOS\",\n        letrasMonedaCentavoSingular: \"CENTAVO\"\n    };\n\n    if (data.centavos > 0) {\n        data.letrasCentavos = \"CON \" + (() => {\n            if (data.centavos == 1)\n                return Millones(data.centavos) + \" \" + data.letrasMonedaCentavoSingular;\n            else\n                return Millones(data.centavos) + \" \" + data.letrasMonedaCentavoPlural;\n        }   )();\n    };\n\n    if(data.enteros == 0)\n        return \"CERO \" + data.letrasMonedaPlural + \" \" + data.letrasCentavos;\n    if (data.enteros == 1)\n        return Millones(data.enteros) + \" \" + data.letrasMonedaSingular + \" \" + data.letrasCentavos;\n    else\n        return Millones(data.enteros) + \" \" + data.letrasMonedaPlural + \" \" + data.letrasCentavos;\n}","import React, { Fragment } from \"react\";\nimport \"./InvoiceLikeDocument.css\";\nimport { DataBox } from \"components/standalone\";\nimport { Cond, FlexDiv } from \"components/wrappers\";\nimport numberToWords from \"../../../utilities/conversions/numberToWords\";\n\nimport document from \"../../../models/document\";\n\ntype props = {document: document};\n\n\n/**Un documento comercial, pudiendo ser: (factura || nota de débito || nota de crédito). */\nexport default function InvoiceLikeDocument({document}: props): JSX.Element {\n\n    const productSubtotal = document.operationData.productTable.reduce((prev, sum) => prev+sum.price*sum.quantity, 0);\n    const productTotal = productSubtotal + productSubtotal * (document.operationData.VAT/100);\n\n    return ( \n    \n    <div className=\"invoice-like-document\" style={{backgroundColor: document.metadata.preferenceColor}}>\n\n        <div id=\"doc-header\" >\n\n            <div className=\"doc-header-advertisement\">\n                <img src={document.sender.logo? URL.createObjectURL(document.sender.logo) : null} alt=\"\" />\n                <p>  {document.sender.name}                                 </p>\n                <p className=\"small\">  {document.sender.address}            </p>\n                <p className=\"small\">  contacto: {document.sender.contact}  </p>\n                <p className=\"small\">  {document.sender.VATCategory}        </p>\n            </div>\n\n\n            <div className=\"doc-header-data\">\n                <div className=\"doc-header-data-title\">\n                    <p>  {document.metadata.documentType}              </p>\n                    <h2> {document.metadata.documentName.toUpperCase()}</h2>\n                    <h2> N°{document.metadata.documentNumber}          </h2>\n                </div>\n                \n                <div className=\"doc-header-data-date\">fecha\n                    <p>{document.metadata.dateOfIssue.split('-')[2]}</p>\n                    <p>{document.metadata.dateOfIssue.split('-')[1]}</p>\n                    <p>{document.metadata.dateOfIssue.split('-')[0]}</p>\n                </div>\n\n                <div className=\"doc-header-data-other\">\n                    <p>C.U.I.T. N°</p><p>{document.sender.code}</p>\n                    <p>Inicio de actividades:</p><p>05-10-22</p>\n                </div>\n            </div>\n        </div>\n\n\n\n\n        <div id=\"doc-subheader\" >\n            <p>Señor/es: {document.receiver.name}</p>\n            <p>C.P.: {document.receiver.postalCode}</p>\n            <p>Domicilio: {document.receiver.address}</p>\n            <p>Municipio: {document.receiver.city}</p>\n            <p>I.V.A.: {document.receiver.VATCategory}</p>\n            <p>C.U.I.T.: {document.receiver.code}</p>\n            <p>Cond. de venta: {document.operationData.sellConditions}</p>\n            <p>Remito:</p>\n        </div>\n\n\n\n        <div id=\"doc-body\" >\n\n            <data>Cantidad</data><data>Descripción</data><data>Precio</data><data>Total</data>\n\n            {document.operationData.productTable.map((row, i) => <Fragment key={i}>\n                <data>{row.quantity}</data>\n                <data>{row.detail}</data>\n                <data>${row.price}</data>\n                <data>${(row.price*row.quantity).toString().length > 7 ? (row.price*row.quantity).toExponential(2) : row.price*row.quantity }</data>\n            </Fragment>)}\n                           \n        </div>\n\n\n\n        <div id=\"doc-footer\" >\n            <FlexDiv >\n                <Cond bool={document.metadata?.documentType === \"A\"}>\n                    <DataBox title=\"subtotal\" value={productSubtotal} />\n                    <DataBox title={`IVA ${document.operationData.VAT}%`} value={(productSubtotal * (document.operationData.VAT/100)).toFixed(2)} />\n                </Cond>\n                <DataBox title=\"total neto\" value={productTotal} />\n            </FlexDiv>\n\n            <FlexDiv justify='space-between' align=\"flex-start\">\n                <div>\n                    <p>Conjunto Solución © Uso Didáctico</p>\n                    <div className=\"doc-footer-copies\">original ⬜ duplicado ⬜ triplicado ⬜</div>\n                </div>\n\n                <DataBox title=\"son pesos\" value={numberToWords(productTotal).toLowerCase()} />\n            </FlexDiv>  \n        </div>\n\n\n\n    </div>)\n}","import React, { Fragment } from \"react\";\nimport \"./Ticket.css\";\n\nimport document from \"../../../models/document\";\nimport numberToWords from \"pages/Operation/utilities/conversions/numberToWords\";\n\ntype props = {document: document};\n\n\n/**Un documento comercial: (ticket). */\nexport default function Ticket({document}: props): JSX.Element {\n\n    const productTotal = document.operationData.productTable.reduce((prev, sum) => prev+sum.price*sum.quantity, 0);\n\n    return ( \n    \n    <div className=\"ticket\">\n\n\n        <div className=\"doc-header-data\">\n            <p>  {document.sender.name}. {document.sender.VATCategory}  </p>\n            <p>C.U.I.T. N° {document.sender.code}</p>\n            <p className=\"small\">Dirección: {document.sender.address}   </p>\n            <p className=\"small\">A consumidor final</p>\n            <h2>Ticket N°{document.metadata.documentNumber}          </h2>\n            <p>Emitido el {document.metadata.dateOfIssue}</p>\n        </div>\n\n\n        <div className=\"doc-body\">\n            <data>Cantidad</data><data>Descripción</data><data>Precio</data><data>Total</data>\n\n            {document.operationData.productTable.map((row, i) => <Fragment key={i}>\n                <data>{row.quantity}</data>\n                <data>{row.detail}</data>\n                <data>${row.price}</data>\n                <data>${(row.price*row.quantity).toString().length > 7 ? (row.price*row.quantity).toExponential(2) : row.price*row.quantity }</data>\n            </Fragment>)}\n        </div>\n\n\n        <div className=\"doc-footer\">\n            <p>CF-DGI</p>\n            <p>Total neto: {numberToWords(productTotal).toLowerCase()} (${productTotal})</p>\n        </div>\n\n\n    </div>)\n}","import { documentClassCode } from \"../models/operation\";\nimport document from \"../models/document\";\nimport documentClassCodeToDocumentName from \"../utilities/conversions/documentClassCodeToDocumentName\";\nimport { base64ToBlob } from \"utilities/conversions\";\n\nexport default async function jsonToDocument(json: string, docCC: documentClassCode): Promise<document> {\n    const doc = JSON.parse(json);\n    return {\n        metadata: {\n            documentNumber:     doc.operationNumber,\n            documentType:       doc.type,\n            documentName:       documentClassCodeToDocumentName(docCC, true),\n            preferenceColor:    doc.preferenceColor,\n            dateOfIssue:        doc.issueDate\n        },\n    \n        sender: {\n            logo:               await base64ToBlob(doc.logo),\n            code:               doc.senderCode? doc.senderCode : doc.senderCuit,\n            name:               doc.senderName,\n            address:            doc.senderAddress,\n            VATCategory:        doc.senderVatCategory,\n            contact:            doc.senderContact\n        },\n        receiver: {\n            code:               doc.receiverCode,\n            name:               doc.receiverName,\n            address:            doc.receiverAddress,\n            VATCategory:        doc.receiverVatCategory,\n            postalCode:         doc.receiverPostalCode,\n            city:               doc.receiverCity,\n        },\n    \n        operationData: {\n            sellConditions:     doc.sellConditions,\n            VAT:                doc.vat,\n            productTable:       doc.products\n        }\n    }\n}","import ajax from 'ports/ajax';\nimport Response from 'models/Response';\nimport documentIdentifier from \"../models/documentIdentifier\";\nimport documentClassCodeToDocumentName from \"../utilities/conversions/documentClassCodeToDocumentName\";\nimport jsonToDocument from '../adapters/jsonToDocument';\n\n/**Recupera un documento comercial utilizando un identificador de documento. */\nexport default async function getDocument(docID: documentIdentifier): Promise<Response> {\n\n    const subrepository = \"FaNdNc\".includes(docID.documentClassCode)? \"/fulls\" : '';\n    const params        = `?operationId=${docID.IDOperation}`;\n    const URL           = `operations${subrepository}/${documentClassCodeToDocumentName(docID.documentClassCode)}${params}`;\n\n    const response = await ajax('GET', URL, true);\n\n    if (response.status === 200) return {...response, content: await jsonToDocument(response.content, docID.documentClassCode)};\n    return response;\n\n}","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { Loading, PDFButton } from \"components/standalone\";\nimport { InvoiceLikeDocument, Ticket } from \"./components/documents\";\nimport { FlexDiv, Section } from \"components/wrappers\";\n\nimport getDocument from \"./services/getDocument\";\n\nimport documentIdentifier from \"./models/documentIdentifier\";\nimport document from \"./models/document\";\nimport { documentClassCode } from \"./models/operation\";\n\n\n\n/**\n * La representación gráfica de un documento comercial.\n * Un documento es la entidad que resulta de una operación exitosa.\n * El tipo de documento se determina por los parámetros de URL.\n*/\nexport default function Document(): JSX.Element {\n\n\n    //Identificar qué documento se debe pedir al servidor.\n    const params = useSearchParams()[0];\n    const documentClassCode = params.get(\"class\") as documentClassCode;\n    const documentIdentifier: documentIdentifier = {\n        IDOperation:        parseInt(params.get(\"id\")),\n        documentClassCode:  documentClassCode,\n    }\n\n\n    //Crear el documento a mostrar.\n    const documentReference = useRef();\n    const [comercialDocument, setComercialDocument]: [document, Function] = useState(undefined);\n\n    //...y llamar al servidor para rellenar sus datos.\n    useEffect(retrieveDocumentByIdentifier, []);\n    function retrieveDocumentByIdentifier() {\n       getDocument(documentIdentifier).then(response => {\n            if (response.ok) setComercialDocument(response.content)\n       });\n    }\n\n    return <Section>\n\n    {comercialDocument===undefined? <Loading /> :\n    \n        <>\n            <div ref={documentReference} style={{margin:\"1rem\", overflow:\"auto\"}}>\n                <AnyComercialDocument comercialDocument={comercialDocument} dcc={documentClassCode} />\n            </div>\n\n            <FlexDiv justify=\"flex-end\">\n                <PDFButton nodeReference={documentReference} \n                filename={`${comercialDocument.metadata.documentName} ${comercialDocument.metadata?.documentType} ${comercialDocument.metadata.documentNumber}`} />    \n            </FlexDiv>\n            \n        </>\n    }\n    \n    </Section>\n}\n\nfunction AnyComercialDocument({comercialDocument, dcc}: {comercialDocument: document, dcc: documentClassCode}): JSX.Element {\n\n    const documentMap = {\n        Fa: <InvoiceLikeDocument document={comercialDocument} />,\n        Nc: <InvoiceLikeDocument document={comercialDocument} />,\n        Nd: <InvoiceLikeDocument document={comercialDocument} />,\n\n        Tk: <Ticket document={comercialDocument} />,\n\n        Oc: <Fragment />,\n        Rm: <Fragment />,\n        Rx: <Fragment />,\n        Rs: <Fragment />,\n        Pa: <Fragment />,\n        Ch: <Fragment />,\n        default: <Fragment />\n    }\n\n\n    return documentMap[dcc];\n    \n}","import { documentClassCode } from \"../models/operation\";\n\n\n/**Devuelve un color correspondiente a un documento comercial.*/\nexport default function getColorByDocClassCode(cc: (documentClassCode | \"default\")): string {\n\n    const documentColors = {\n        Fa: \"#fa1\",\n        Nc: \"#285\",\n        Nd: \"hotpink\",\n        Tk: \"black\",\n        Oc: \"#248\",\n        Rm: \"#841\",\n        Rx: \"purple\",\n        Rs: \"#299\",\n        Pa: \"#842\",\n        Ch: \"green\",\n        default: \"#999\"\n    }\n\n    return documentColors[cc] ?? documentColors.default;\n}","import getColorByDocClassCode from \"pages/Operation/utilities/getColorByDocClassCode\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport documentHistoryItem from \"../../../models/documentHistoryItem\";\nimport documentNameToClassCode from \"../../../utilities/conversions/documentNameToClassCode\";\nimport \"./DocumentHistoryItem.css\";\n\n\nexport default function DocumentHistoryItem({item}:{item: documentHistoryItem}) {\n\n    //Personalización de item de historial.\n    const docClassCode = documentNameToClassCode(item.documentName);\n    const color = getColorByDocClassCode(docClassCode);\n    const URL = `/inicio/operacion/documento?id=${item.IDOperation}&class=${docClassCode}`;\n\n\n    return <Link to={URL} className=\"document-history-item\" >\n\n        <h2 style={{color:color}}>\n            {item.documentName} {item.documentType}\n        </h2>\n        <h4>{item.documentNumber}</h4>\n\n       \n        <div>\n            <p>{item.dateOfIssue}</p>\n            {item.receiverName?<p><span>para:</span> {item.receiverName}</p>:null}\n            <p>{item.receiverCUIT}</p>\n        </div>\n\n    </Link>\n}","import { documentClassCode } from \"../../models/operation\";\n\n\n/**Convierte un nombre de documento en un código de clase de documento.*/\nexport default function documentNameToClassCode(name: string): documentClassCode {\n\n    name = name.toLocaleLowerCase();\n\n    if (name.includes(\"factura\"))           return \"Fa\"\n    if (name.includes(\"débito\"))            return \"Nd\"\n    if (name.includes(\"crédito\"))           return \"Nc\"\n    if (name.includes(\"ticket\"))           return  \"Tk\"\n\n\n    if (name.includes(\"orden de compra\"))   return \"Oc\"\n    if (name.includes(\"remito\"))            return \"Rm\"\n    if (name.includes(\"recibo x\"))          return \"Rx\"\n    if (name.includes(\"recibo\"))            return \"Rs\"\n    if (name.includes(\"pagaré\"))            return \"Pa\"\n    if (name.includes(\"cheque\"))            return \"Ch\"\n    \n    return null;\n    \n}","import documentHistoryItem from \"../models/documentHistoryItem\";\n\nexport default function jsonToDocumentHistory(json: string): documentHistoryItem[] {\n    const history = JSON.parse(json);\n    return history?.map((item : any): documentHistoryItem => { return {\n        IDOperation:    item.operationId,\n        documentName:   item.documentClass,\n        documentType:   item.documentType !== \"undefined\" ? item.documentType: \"\",\n        documentNumber: item.operationNumber,\n        \n        receiverName:   item.receiverName !== \"undefined\" ? item.receiverName : \"\",\n        receiverCUIT:   item.receiverCuit !== \"undefined\" ? item.receiverCuit : \"\",\n        dateOfIssue:    item.issueDate,\n    }})\n}","import ajax from 'ports/ajax';\nimport Response from 'models/Response';\nimport jsonToDocumentHistory from \"../adapters/jsonToDocumentHistory\";\nimport documentClassCodeToDocumentName from \"../utilities/conversions/documentClassCodeToDocumentName\";\nimport { documentClassCode } from '../models/operation';\nimport {IDTrader} from \"utilities/constants\";\n\n\ntype documentHistoryFilters = {\n    IDBranch?:          number,\n    pointOfSaleNumber?: number,\n    documentClassCode?: documentClassCode\n}\n\n\n/**Recupera el historial de documentos comerciales, aceptando varios filtros. */\nexport default async function getDocumentHistory(filters: documentHistoryFilters): Promise<Response> {\n\n    let params = filters.IDBranch? `IDBranch=${filters.IDBranch}&` : '';\n    params +=    filters.pointOfSaleNumber? `pointOfSaleNumber=${filters.pointOfSaleNumber}&` : '';\n    params +=    filters.documentClassCode? `repository=${documentClassCodeToDocumentName(filters.documentClassCode)}` : '';\n\n    const URL    = `operations/traders/${IDTrader}?${params}`;\n\n    const response = await ajax('GET', URL, true);\n\n    if (response.status === 200) return {...response, content: jsonToDocumentHistory(response.content)};\n    return response;\n\n}","import React, {useEffect, useState} from 'react';\n\nimport DocumentHistoryItem from \"./DocumentHistoryItem/DocumentHistoryItem\";\nimport { Select } from 'components/formComponents';\n\nimport getListOfBranchesAndPoints from 'pages/Operation/services/getListOfBranchesAndPoints';\nimport getDocumentHistory from \"../../services/getDocumentHistory\";\n\nimport documentHistoryItem from 'pages/Operation/models/documentHistoryItem';\nimport \"./DocumentHistory.css\";\nimport { FlexDiv } from 'components/wrappers';\n\nconst documentClasses = [\n    {title: \"Factura\",          value: \"Fa\"},\n    {title: \"Nota de débito\",   value: \"Nd\"},\n    {title: \"Nota de crédito\",  value: \"Nc\"},\n    {title: \"Ticket\",           value: \"Tk\"},\n]\n\n\n/**Historial de documentos comerciales. */\nexport default function DocumentHistory() {\n\n\n    //Recuperar datos para mostrar los filtros.\n    useEffect(retrieveFilteringData, []);\n    const [branchesAndPoints, setBranchesAndPoints] = useState([]);\n    function retrieveFilteringData() {\n\n        getListOfBranchesAndPoints(true)\n        .then(response => {\n            if (!response.ok) return;\n            setBranchesAndPoints(response.content);\n        })\n    }\n\n\n\n    //Filtros del historial.\n    const [IDBranch, setIDBranch] = useState(undefined);\n    const [pointOfSaleNumber, setPointOfSaleNumber] = useState(undefined);\n    const [documentClassCode, setDocumentClass] = useState(undefined);\n\n\n    //Recuperar el historial.\n    const [documentHistory, setDocumentHistory]: [documentHistoryItem[], Function] = useState([]);\n    useEffect(searchInDocumentHistory, [IDBranch, pointOfSaleNumber, documentClassCode]);\n    function searchInDocumentHistory() {\n        const filters = {\n            IDBranch:          IDBranch,\n            pointOfSaleNumber: pointOfSaleNumber,\n            documentClassCode: documentClassCode\n        };\n\n        getDocumentHistory(filters).then(response => {\n            if (response.ok) setDocumentHistory(response.content);\n        });\n    }\n    \n\n\n    return <div className='document-history'>\n        \n        <menu className='document-history-menu'>\n            <Select \n            options={branchesAndPoints}\n            value={IDBranch}                onChange={setIDBranch}         label=\"Sucursal\"\n            subValue={pointOfSaleNumber}    subOnChange={setPointOfSaleNumber} sublabel=\"Punto de venta\" />\n\n\n            <Select \n            options={documentClasses}\n            value={documentClassCode}       onChange={setDocumentClass}    label=\"Documento\"\n            />\n        </menu>\n\n\n       <FlexDiv justify='flex-start'>\n\n        {\n            documentHistory?.map((item) => (\n                <DocumentHistoryItem item={item} key={item.IDOperation} />\n            ))\n        }\n\n        </FlexDiv> \n        \n    </div>\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { documentClassCode } from \"../../models/operation\";\nimport getColorByDocClassCode from \"../../utilities/getColorByDocClassCode\";\nimport documentClassCodeToDocumentName from \"../../utilities/conversions/documentClassCodeToDocumentName\";\nimport './OperationSelectionItem.css';\n\ntype props = {\n    documentClassCode: documentClassCode,\n    link:  string,\n    disabled?: boolean\n}\n\n/**\n * Un cuadro con un enlace 'link', un texto de dos caracteres y un título.\n * Para ser usado en el menú de selección de operación.\n */\nexport default function OperationSelectionItem({documentClassCode, link, disabled=false}:props): JSX.Element {\n\n    const color = getColorByDocClassCode(disabled? \"default\" : documentClassCode);\n\n    return (\n        <Link to={link} data-option onClick={(e)=>disabled?e.preventDefault():null}>\n\n            <div style={{color:color, borderColor: color}}>\n\n                <p>{documentClassCode.charAt(0)}<span>{documentClassCode.charAt(1)}</span></p>\n\n            </div>\n\n            <span><p>{documentClassCodeToDocumentName(documentClassCode, true)}</p></span>\n\n        </Link>\n    );\n}","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport OperationForm from \"./OperationForm\";\nimport Document from \"./Document\";\nimport DocumentHistory from \"./components/DocumentHistory/DocumentHistory\";\n\nimport OperationSelectionItem from \"./components/OperationSelectionItem/OperationSelectionItem\";\nimport { FlexDiv, Section } from 'components/wrappers';\n\n\n/**Pantalla de selección de tipos de operaciones, con el historial de operaciones.*/\nexport default function OperationSelection() {\n  return <Routes>\n    <Route index                      element={OperationMainScreen} />\n    <Route path={\"/documento\"}        element={<Document />}        />\n\n\n    <Route path={\"/factura\"}          element={<OperationForm documentClassCode=\"Fa\" />} />\n    <Route path={\"/nota-de-credito\"}  element={<OperationForm documentClassCode=\"Nc\" />} />\n    <Route path={\"/nota-de-debito\"}   element={<OperationForm documentClassCode=\"Nd\" />} />\n    <Route path={\"/ticket\"}           element={<OperationForm documentClassCode=\"Tk\" />} />\n    <Route path={\"/recibo-x\"}         element={<OperationForm documentClassCode=\"Rx\" />} />\n    <Route path={\"/recibo\"}           element={<OperationForm documentClassCode=\"Rs\" />} />\n    <Route path={\"/orden-de-compra\"}  element={<OperationForm documentClassCode=\"Oc\" />} />\n    <Route path={\"/remito\"}           element={<OperationForm documentClassCode=\"Rm\" />} />\n    <Route path={\"/cheque\"}           element={<OperationForm documentClassCode=\"Ch\" />} />\n    <Route path={\"/pagare\"}           element={<OperationForm documentClassCode=\"Pa\" />} />\n  </Routes>\n\n}\n\nconst OperationMainScreen = <>\n  <Section label=\"Nueva operación\">\n    <FlexDiv>\n      <OperationSelectionItem   documentClassCode=\"Fa\" link=\"./factura\"          />\n      <OperationSelectionItem   documentClassCode=\"Tk\" link=\"./ticket\"           />\n      <OperationSelectionItem   documentClassCode=\"Oc\" link=\"./orden-de-compra\" disabled  />\n      <OperationSelectionItem   documentClassCode=\"Rm\" link=\"./remito\" disabled           />\n      <OperationSelectionItem   documentClassCode=\"Rx\" link=\"./recibo-x\" disabled         />\n      <OperationSelectionItem   documentClassCode=\"Rs\" link=\"./recibo\" disabled           />\n      <OperationSelectionItem   documentClassCode=\"Nc\" link=\"./nota-de-credito\"  />\n      <OperationSelectionItem   documentClassCode=\"Nd\" link=\"./nota-de-debito\"   />\n      <OperationSelectionItem   documentClassCode=\"Pa\" link=\"./pagare\" disabled  />\n      <OperationSelectionItem   documentClassCode=\"Ch\" link=\"./cheque\" disabled  />\n    </FlexDiv>\n\n      \n  </Section>\n  <DocumentHistory /> \n</>","import { fileToBase64 } from 'utilities/conversions';\nimport branch from '../models/branch';\n\n/**Adapta un objeto de sucursal a un formato esperado por el servidor para crear un nueva sucursal. */\nexport default async function branchToJson(branch: branch): Promise<string> {\n    return JSON.stringify({\n        IDTrader: sessionStorage.getItem('IDTrader'),\n        name:  branch.name,\n        email: branch.email,\n        phone: branch.phone,\n        address: {\n            province:      branch.address.province,\n            city:          branch.address.city,\n            postalCode:    branch.address.postalCode,\n            street:        branch.address.street,\n            addressNumber: branch.address.addressNumber,\n        },\n        photo:  await fileToBase64(branch.photo),\n        logo:   await fileToBase64(branch.logo),\n        preferenceColor:  branch.preferenceColor,\n    })\n}","import ajax from 'ports/ajax';\nimport branch from '../models/branch';\nimport branchToJson from '../adapters/branchToJson';\nimport Response from 'models/Response';\n\n/**Envía una sucursal para ser creada.\n * @param branch    - La sucursal a ser creada.\n*/\nexport default async function postBranch(branch: branch): Promise<Response> {\n    return await ajax('POST', 'branches', true, await branchToJson(branch));\n}","import {SetStateAction} from \"react\";\n\n/**\n * Pasa una lista de provincias (según la API del Servicio de Normalización de Datos Geográficos Argentina) a una función de estado setState.\n */\nexport default function getListOfProvinces(setStateAction: SetStateAction<any>): void {\n    \n    fetch(\"https://apis.datos.gob.ar/georef/api/provincias?campos=id,nombre\")\n    \n    .then(response        => response.json()\n\n    .then(listOfProvinces => setStateAction(listOfProvinces.provincias.map(\n\n        (provincia: any)  => {\n            return {\n                value: provincia.nombre\n            }\n        }\n\n    )))\n    );\n}","import {SetStateAction} from \"react\";\n\n/**\n * Pasa una lista de municipios (según la API del Servicio de Normalización de Datos Geográficos Argentina) a una función de estado setState.\n */\nexport default function getListOfCitiesByProvinceName(provinceName: string, setStateAction: SetStateAction<any>): void {\n    \n    fetch(`https://apis.datos.gob.ar/georef/api/municipios?provincia=${provinceName}&campos=nombre&max=99`)\n    \n    .then(response        => response.json()\n\n    .then(listOfCities => setStateAction(listOfCities.municipios.map(\n\n        (municipio: any)  => {\n            return {\n                value: municipio.nombre\n            }\n        }\n\n    )))\n    );\n}","var _metadata, _path, _path2, _flowRegion, _flowPara, _path3, _path4, _path5, _path6;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDefaultLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"200mm\",\n    height: \"200mm\",\n    viewBox: \"0 0 250 200\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsCc: \"http://creativecommons.org/ns#\",\n    xmlnsDc: \"http://purl.org/dc/elements/1.1/\",\n    xmlnsOsb: \"http://www.openswatchbook.org/uri/2009/osb\",\n    xmlnsRdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, /*#__PURE__*/React.createElement(\"rdfRDF\", null, /*#__PURE__*/React.createElement(\"ccWork\", {\n    rdfAbout: \"\"\n  }, /*#__PURE__*/React.createElement(\"dcFormat\", null, \"image/svg+xml\"), /*#__PURE__*/React.createElement(\"dcType\", {\n    rdfResource: \"http://purl.org/dc/dcmitype/StillImage\"\n  }), /*#__PURE__*/React.createElement(\"dcTitle\", null))))), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(2.0166 0 0 2.0568 -27.6 -212.89)\"\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m137.58 91.544-123.97 121.55l123.97 1e-5z\",\n    stroke: \"#000\",\n    strokeWidth: \".16239px\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m14.499 213.7 123.24-122.26-123.97 0.71663z\",\n    fill: \"#fff\",\n    stroke: \"#000\",\n    strokeWidth: \".16239px\"\n  })), /*#__PURE__*/React.createElement(\"flowRoot\", {\n    transform: \"scale(.26458)\",\n    fill: \"#000000\",\n    fontFamily: \"sans-serif\",\n    fontSize: \"40px\",\n    letterSpacing: \"0px\",\n    wordSpacing: \"0px\",\n    style: {\n      lineHeight: 1.25\n    },\n    xmlSpace: \"preserve\"\n  }, _flowRegion || (_flowRegion = /*#__PURE__*/React.createElement(\"flowRegion\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    x: -273.93,\n    y: 476.81,\n    width: 33.214,\n    height: 40\n  }))), _flowPara || (_flowPara = /*#__PURE__*/React.createElement(\"flowPara\", null, \"dD H\"))), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m45.832 163.52 18.754 17.612l0.30734 0.1291h59.741c8.2554-0.82568 9.1147-17.364-0.37414-18.167l-58.905 0.17279-0.76895-0.21453-18.426-0.17252z\",\n    fill: \"#fff\",\n    stroke: \"#000\",\n    strokeWidth: 3.1149\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m86.886 122.52v80.618h18.733v-62.236z\",\n    fill: \"#fff\",\n    stroke: \"#000003\",\n    strokeWidth: 3.1182\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m84.754 120.2-60.531 0.54963v20.153l56.568 0.85499 6.3699 0.1355 0.05316-19.372z\",\n    stroke: \"#fff\",\n    strokeWidth: 3.1075\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m45.373 105.7 0.13132 57.817h18.733l-0.13132-58.203c-0.69391-9.5667-17.218-10.764-18.733 0.38627z\",\n    stroke: \"#fff\",\n    strokeWidth: 3.1075\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDefaultLogo);\nexport default __webpack_public_path__ + \"static/media/default-logo.429a7022fde89b3c49fa6126c900d42b.svg\";\nexport { ForwardRef as ReactComponent };","var _metadata, _rect, _path, _ellipse;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDefaultPhoto(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"200mm\",\n    height: \"200mm\",\n    viewBox: \"0 0 250 200\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsCc: \"http://creativecommons.org/ns#\",\n    xmlnsDc: \"http://purl.org/dc/elements/1.1/\",\n    xmlnsOsb: \"http://www.openswatchbook.org/uri/2009/osb\",\n    xmlnsRdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, /*#__PURE__*/React.createElement(\"rdfRDF\", null, /*#__PURE__*/React.createElement(\"ccWork\", {\n    rdfAbout: \"\"\n  }, /*#__PURE__*/React.createElement(\"dcFormat\", null, \"image/svg+xml\"), /*#__PURE__*/React.createElement(\"dcType\", {\n    rdfResource: \"http://purl.org/dc/dcmitype/StillImage\"\n  }), /*#__PURE__*/React.createElement(\"dcTitle\", null))))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    y: -25,\n    width: 250,\n    height: 250,\n    fill: \"#fff\",\n    strokeWidth: 0\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 137.66c60.735-91.294 66.816-98.481 66.816-98.481l82.742 105.22 53.209-57.656 47.233 64.087v74.167l-250 1e-5z\",\n    fill: \"#808080\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 155.49,\n    cy: 38.327,\n    rx: 29.931,\n    ry: 29.723,\n    fill: \"#808080\",\n    strokeWidth: 0\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDefaultPhoto);\nexport default __webpack_public_path__ + \"static/media/default-photo.a9ea4cb05375e82b939087637855f41c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n//Modelos.\nimport branch from \"./models/branch\";\n\n//Servicios.\nimport postBranch from './services/postBranch';\nimport getListOfProvinces from './services/public/getListOfProvinces';\nimport getListOfCitiesByProvinceName from './services/public/getListOfCitiesByProvinceName';\n\n//GUI.\nimport defaultLogo from 'assets/svg/default-logo.svg';\nimport defaultPhoto from 'assets/svg/default-photo.svg';\nimport { Field, Form, Select, Image, Message, Button, Color } from \"components/formComponents\";\nimport { BiChevronLeft } from \"react-icons/bi\";\nimport { Loading } from 'components/standalone';\nimport { FlexDiv, Retractable } from \"components/wrappers\";\nimport Valid from \"utilities/Valid\";\n\n\n\n/**Formulario para crear una nueva sucursal. */\nexport default function NewBranch(): JSX.Element {\n\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  \n  \n\n  //  Datos del punto de venta.  //\n  const [name,       setName] =       useState();\n  //Dirección.\n  const [province,   setProvince] =   useState(\"Misiones\");\n  const [city,       setCity] =       useState();\n  const [postalCode, setPostalCode] = useState();\n  const [street,     setStreet] =     useState();\n  const [number,     setNumber] =     useState();\n  //Contacto.\n  const [email,      setEmail] =      useState();\n  const [phone,      setPhone] =      useState();\n  //Personalización.\n  const [photo,      setPhoto] =      useState();\n  const [logo,       setLogo] =       useState();\n  const [color,      setColor] =      useState(\"#ffffff\");\n\n\n  //  Datos de opciones de formulario.  //\n  const [provinces, setProvinces] = useState([]);\n  const [cities, setCities] = useState([]);\n\n\n  useEffect(()=>getListOfProvinces(setProvinces), []);\n  useEffect(()=>getListOfCitiesByProvinceName(province, setCities), [province]);\n\n\n  //  Controladores de elementos <Retractable/>  //\n  const [boolAddress,     setBoolAddress] =     useState(true);\n  const [boolContact,     setBoolContact] =     useState(false);\n  const [boolPreferences, setBoolPreferences] = useState(false);\n\n  function validate(): void {\n    setError(undefined);\n    if (!Valid.names(name, setError))            return;\n    if (!Valid.address(city))                    return setError(\"La localidad debe ser de entre 4 y 40 caracteres\");\n    if (!Valid.postalCode(postalCode, setError)) return;\n    if (!Valid.address(street))                  return setError(\"La calle debe ser de entre 4 y 40 caracteres\");\n    if (!Valid.addressNumber(number, setError))  return;\n    if (!Valid.email(email, setError))           return;\n    if (!Valid.phone(phone, setError))           return;\n    if (!Valid.image(photo, setError))           return;\n    if (!Valid.image(logo))                      return setError(\"El logo no puede superar los 2MB\");\n    if (!Valid.hexColor(color, setError))        return;\n    submit();\n  }\n\n  async function submit(): Promise<void> {\n    setLoading(true);\n    const branch: branch = {\n      name: name,\n      email: email,\n      phone: phone,\n      address: {\n        province: province,\n        city: city,\n        postalCode: postalCode,\n        street: street,\n        addressNumber: number,\n      },\n      logo: logo,\n      photo: photo,\n      preferenceColor: color\n    }\n    const response = await postBranch(branch);\n      \n    setLoading(false);\n    if (!response.ok) setError(response.message);\n    else setSuccess(true);\n\n  }\n\n  return (\n    <Form title=\"Crea una instalación\" onSubmit={validate} >\n\n    <BiChevronLeft onClick={() => navigate(-1)} style={{margin:\"1rem\", fontSize:\"2rem\", color:\"rgb(44,44,44)\",cursor:\"pointer\"}} />\n\n      <Field label=\"Nombre comercial\" validator={Valid.names(name)} bind={[name, setName]} placeholder={\"Entre 3 y 20 caracteres\"} />\n\n      <Retractable label=\"Dirección\" sync={boolAddress}\n      onClick={(state:boolean)=>{setBoolAddress(state); setBoolContact(false); setBoolPreferences(false);}}>\n\n        <FlexDiv>\n          <Select label=\"Provincia\"           value={province} onChange={setProvince}     options={provinces} />\n          <Select label=\"Municipio\"           value={city} onChange={setCity}     options={cities} />\n          <Field  label=\"Código postal\"       bind={[postalCode, setPostalCode]} type=\"number\" validator={Valid.postalCode(postalCode)} />\n          <Field  label=\"Calle\"               bind={[street, setStreet]}         validator={Valid.address(street)}                          />\n          <Field  label=\"Altura \" bind={[number, setNumber]}         type=\"number\" validator={Valid.addressNumber(number)} />\n        </FlexDiv>\n\n      </Retractable>\n\n      <Retractable label=\"Información de contacto\" sync={boolContact} \n      onClick={(state:boolean)=>{setBoolContact(state); setBoolAddress(false); setBoolPreferences(false);}}>\n\n        <FlexDiv>\n          <Field label=\"Correo electrónico\" bind={[email, setEmail]} type=\"email\" validator={Valid.email(email)} />\n          <Field label=\"Número de teléfono\" bind={[phone, setPhone]} type=\"tel\"   validator={Valid.phone(phone)}  />\n        </FlexDiv>\n\n      </Retractable>\n\n      <Retractable label=\"Personalización (opcional)\" sync={boolPreferences} \n      onClick={(state:boolean)=>{setBoolPreferences(state); setBoolAddress(false); setBoolContact(false);}}>\n\n        <FlexDiv>\n          <Image label=\"Foto del lugar\" img={photo} setter={setPhoto} fallback={defaultPhoto} />\n          <Image label=\"Logo\" img={logo} setter={setLogo} fallback={defaultLogo} />\n        </FlexDiv>\n        <Color label=\"Color de los documentos comerciales\" value={color} onChange={setColor} />\n        \n\n      </Retractable>\n\n\n      <Message type=\"error\" message={error} />\n\n      {success?<Message type=\"success\" message={`Se ha creado la sucursal \"${name}\"`} />:\n      loading?<Loading />:<Button type=\"submit\">Crear</Button>}\n    </Form>\n  );\n}","import Response from 'models/Response';\nimport ajax from 'ports/ajax';\n\n/**Elimina la sucursal especificada por IDBranch. */\nexport default async function deleteBranch(IDBranch:number, callback: Function): Promise<Response> {\n    return await ajax('DELETE', 'branches/'+IDBranch, true);\n}","import React, { useEffect, useState } from \"react\";\nimport { useNavigate }                from \"react-router-dom\";\n\nimport branch from \"pages/Branches/models/branch\";\n\nimport deleteBranch                   from '../../services/deleteBranch';\n\nimport { Button, Message }            from \"components/formComponents\";\nimport { Confirm }                    from \"components/wrappers\";\nimport './BranchBanner.css';\n\n\n/**Encabezado con un información de la sucursal, y botones para eliminar y modificarla. */\nexport default function BranchBanner({branch}:{branch:branch}): JSX.Element {\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate();\n    \n    function tryDeleteBranch() {\n      deleteBranch(branch.ID, (ok:boolean, data:string)=> {\n        if (ok) navigate(-1);\n        else setError(data);\n      })\n    }\n\n\n    return (\n        <div data-component=\"branch-banner\">\n          <img src={branch.photo?.size>10?URL.createObjectURL(branch.photo):null} alt=\"\" />\n          <h2>{branch.name}</h2>\n          <h3>{branch.address.city + ' ' + branch.address.street + ' ' + branch.address.addressNumber}</h3>\n\n          <div>\n          <Button onClick={()=>navigate('./editar')}>Editar</Button>\n          <Confirm label=\"La instalación y los puntos de venta serán eliminados. Las operaciones se conservarán.\" onConfirm={tryDeleteBranch}>\n            <Button type=\"delete\">Eliminar</Button>\n          </Confirm>\n          </div>\n\n          <Message type=\"error\" message={error} />\n        </div>\n    );\n}","import Response from 'models/Response';\nimport ajax from 'ports/ajax';\nimport getToken from 'services/getToken';\nimport {IDTrader} from 'utilities/constants';\n\n/**\n * Registra un nuevo punto de venta.\n * @param IDBranch - El ID de la sucursal a la cual pertenece el punto.\n */\nexport default async function postPointOfSale(IDBranch:number): Promise<Response> {\n    return await ajax('POST', `pointsofsale/branches/${IDBranch}/traders/${IDTrader}`, true);\n}","import Response from 'models/Response';\nimport ajax from 'ports/ajax';\n\n/**\n * Obtiene una lista de puntos de venta.\n * @param IDBranch - El ID de la sucursal a la cual pertenece el punto.\n * @param callback - La función que procesará la respuesta.\n */\nexport default async function getPointsOfSale(IDBranch:number, page:number): Promise<Response> {\n    const response = await ajax('GET', `pointsofsale/branches/${IDBranch}?index=${page}&size=12&sort=pointOfSaleNumber&order=asc`, true);\n\n    if (response.status === 200) return {...response, content: JSON.parse(response.content)};\n    return {...response, message: \"No se ha podido recuperar los puntos de venta\"}\n\n}","import Response from 'models/Response';\nimport ajax from 'ports/ajax';\nimport {IDTrader} from 'utilities/constants';\n\n/**Elimina el punto de venta especificado por IDPoint. */\nexport default async function deletePointOfSale(IDPoint:number): Promise<Response> {\n    const response = await ajax('DELETE', `pointsofsale/${IDPoint}/traders/${IDTrader}`, true);\n    return {...response, message: response.status === 204? \"Se ha eliminado el punto de venta\" : \"Error al eliminar el punto de venta\"};\n}","import React, { useEffect, useState } from \"react\";\n\nimport postPointOfSale from '../../services/postPointOfSale';\nimport getPointsOfSale from \"../../services/getPointsOfSale\";\nimport deletePointOfSale from \"../../services/deletePointOfSale\";\n\nimport { pointsOfSale } from '../../models/pointsOfSale';\n\nimport { Message } from \"components/formComponents\";\nimport { Loading, Pagination } from \"components/standalone\";\nimport { BsFillXCircleFill } from \"react-icons/bs\";\nimport {Confirm, FlexDiv} from \"components/wrappers\";\n\nimport { toFourDigitNumber } from \"utilities/conversions\";\nimport './BranchPoints.css';\n\n\n/**Muestra una lista de puntos de venta de una sucursal. Permite crear y eliminar puntos de venta. */\nexport default function BranchPoints({IDBranch}:{IDBranch:number}): JSX.Element {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [points, setPoints]:\n    [pointsOfSale, React.Dispatch<React.SetStateAction<pointsOfSale>>]  = useState();\n    const [page, setPage] = useState(0);\n\n    useEffect(loadPointsOfSaleList, [page]);\n\n    async function newPointOfSale(): Promise<void> {\n        setLoading(true);\n        const response = await postPointOfSale(IDBranch);\n        if (response.ok) loadPointsOfSaleList();\n        else setError(\"Error al crear nuevo punto de venta.\");\n        setLoading(false);\n    }\n\n    function loadPointsOfSaleList() {\n        getPointsOfSale(IDBranch, page).then( response => {\n            if (response.ok) setPoints(response.content);\n        })\n    }\n\n    async function requestDeletePointOfSale(IDPoint:number, index:number): Promise<void> {\n        const response = await deletePointOfSale(IDPoint);\n        if (response.ok) loadPointsOfSaleList();\n        else setError(error);\n    }\n\n    return (\n        <div data-branchpoints>\n            <h1>Puntos de venta</h1>\n\n            {!points?null:\n                \n            <div style={{width:\"70%\"}}>\n\n                <FlexDiv>\n\n                    <Pagination page={page} setPage={setPage} totalPages={points.totalPages} last={points.last}/>\n                    {loading? <Loading /> :\n\n            \n                    <div className=\"point-plus\" onClick={newPointOfSale}>\n                        +\n                    </div>}\n                    \n                </FlexDiv>\n\n                <FlexDiv>\n\n                    {points.content.map((point, index)=>\n                        <div className=\"point\" key={index}>\n\n                            <h3>N°{toFourDigitNumber(point.pointOfSaleNumber)}</h3>\n\n                            <Confirm label={`El punto de venta ${toFourDigitNumber(point.pointOfSaleNumber)} será eliminado, las operaciones se conservarán. ¿Estás seguro?`}\n                            onConfirm={()=>requestDeletePointOfSale(point.pointOfSaleId, index)}>\n                                <BsFillXCircleFill />\n                            </Confirm>\n                        </div>\n                    )}\n\n                </FlexDiv>\n\n                <Message type=\"error\" message={error}/>\n            </div>}\n            \n        </div>\n    );\n}\n\n","import { fileToBase64 } from 'utilities/conversions';\nimport branch from '../models/branch';\n\n/**Adapta un objeto de sucursal actualizada a un formato esperado por la API. */\nexport default async function updatedBranchToJson(branch: branch): Promise<string> {\n    return JSON.stringify({\n        updatedName:          branch.name,\n        updatedEmail:         branch.email,\n        updatedPhone:         branch.phone,\n        updatedProvince:      branch.address.province,\n        updatedCity:          branch.address.city,\n        updatedPostalCode:    branch.address.postalCode,\n        updatedStreet:        branch.address.street,\n        updatedAddressNumber: branch.address.addressNumber,\n        updatedPhoto:         await fileToBase64(branch.photo),\n        updatedLogo:             await fileToBase64(branch.logo),\n        updatedPreferenceColor:  branch.preferenceColor,\n    })\n}","import ajax from 'ports/ajax';\nimport branch from '../models/branch';\nimport updatedBranchToJson from '../adapters/updatedBranchToJson';\nimport Response from 'models/Response';\n\n/**Envía los datos de una sucursal con uno o más datos actualizados.\n * @param IDBranch      - Identificador de la sucursal a actualizar.\n * @param updatedBranch - Objeto de sucursal actualizada.\n*/\nexport default async function updateBranch(IDBranch:number, updatedBranch: branch): Promise<Response> {\n    return await ajax('PUT', \"branches/\"+IDBranch, true, await updatedBranchToJson(updatedBranch));\n}","import Response from 'models/Response';\nimport ajax from 'ports/ajax';\n\n/**Recupera el logo de la sucursal especificada, en base 64. */\nexport default async function getBranchLogo(IDBranch: number): Promise<Response> {\n    return await ajax(\"GET\",\"branches/\"+IDBranch+\"/get-logo\", true);\n}","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n//GUI.\nimport defaultLogo from 'assets/svg/default-logo.svg';\nimport defaultPhoto from 'assets/svg/default-photo.svg';\nimport { Field, Form, Select, Image, Message, Button, Color } from \"components/formComponents\";\nimport { BiChevronLeft } from \"react-icons/bi\";\nimport { Loading } from 'components/standalone';\nimport { FlexDiv, Retractable } from \"components/wrappers\";\n\n//Utilities.\nimport Valid from \"utilities/Valid\";\nimport branch from \"./models/branch\";\nimport { base64ToBlob } from \"utilities/conversions\";\n\n//Servicios.\nimport putBranch from './services/putBranch';\nimport getBranchLogo from './services/getBranchLogo';\nimport getListOfProvinces from './services/public/getListOfProvinces';\nimport getListOfCitiesByProvinceName from './services/public/getListOfCitiesByProvinceName';\n\ntype props = {\n  branch: branch\n}\n\n/**Formulario para visualizar y cambiar datos de una instalación/sucursal.*/\nexport default function EditBranch({branch}:props): JSX.Element {\n\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  //  Controladores de elementos <Retractable/>  //\n  const [boolAddress,     setBoolAddress] =     useState(true);\n  const [boolContact,     setBoolContact] =     useState(false);\n  const [boolPreferences, setBoolPreferences] = useState(false);\n\n\n\n\n  //  Datos del punto de venta.  //\n  const [name,       setName] =       useState();\n  //Dirección.\n  const [province,   setProvince] =   useState();\n  const [city,       setCity] =       useState();\n  const [postalCode, setPostalCode] = useState();\n  const [street,     setStreet] =     useState();\n  const [addressNumber,     setAddressNumber] =     useState();\n  //Contacto.\n  const [email,      setEmail] =      useState();\n  const [phone,      setPhone] =      useState();\n  //Personalización.\n  const [photo,      setPhoto] =      useState(null);\n  const [logo,       setLogo] =       useState(null);\n  const [color,      setColor] =      useState(branch.preferenceColor);\n\n  //  Datos de opciones de formulario.  //\n  const [provinces, setProvinces] = useState([]);\n  const [cities, setCities] = useState([]);\n\n\n  useEffect(()=>getListOfProvinces(setProvinces), []);\n  useEffect(()=>getListOfCitiesByProvinceName(province, setCities), [province]);\n\n  \n  useEffect(()=>{\n    setPhoto(branch.photo);\n\n    getBranchLogo(branch.ID). then (response => {\n      if (response.ok) base64ToBlob(response.content).then(convertedLogo=>setLogo(convertedLogo));\n    });\n  },[]);\n\n  function validate():void {\n    setError(undefined);\n    if (name          && !Valid.names(name, setError)) return;\n    if (city          && !Valid.address(city)) return setError(\"Elija un municipio\");\n    if (postalCode    && !Valid.postalCode(postalCode, setError)) return;\n    if (street        && !Valid.address(street)) return setError(\"La calle debe ser de entre 4 y 40 caracteres\");\n    if (addressNumber && !Valid.addressNumber(addressNumber, setError)) return;\n    if (email         && !Valid.email(email, setError)) return;\n    if (phone         && !Valid.phone(phone, setError)) return;\n    if (!Valid.image(photo, setError)) return;\n    if (!Valid.image(logo)) return setError(\"El logo no puede superar los 2MB\");\n    if (!Valid.hexColor(color, setError)) return;\n    submit();\n  }\n\n  async function submit(): Promise<void> {\n    setLoading(true);\n    const updatedBranch: branch = {\n      name: name,\n      email: email,\n      phone: phone,\n      address: {\n        province: province,\n        city: city,\n        postalCode: postalCode,\n        street: street,\n        addressNumber: addressNumber\n      },\n      logo: logo,\n      photo: photo,\n      preferenceColor: color\n    }\n\n\n    const response = await putBranch(branch.ID, updatedBranch);\n    if (response.ok) setSuccess(true)\n    else setError(response.message);\n    setLoading(false)\n  }\n\n\n  return (\n    <Form title={\"Editando sucursal \"+branch.name} onSubmit={validate} >\n\n    <BiChevronLeft onClick={() => navigate(-1)} style={{margin:\"1rem\", fontSize:\"2rem\", color:\"rgb(44,44,44)\",cursor:\"pointer\"}} />\n\n      <Field label=\"Nombre de fantasía\" validator={Valid.names(name)} \n      bind={[name, setName]} placeholder={branch.name} />\n\n      <Retractable label=\"Dirección\" sync={boolAddress}\n      onClick={(state:boolean)=>{setBoolAddress(state); setBoolContact(false); setBoolPreferences(false);}}>\n\n        <FlexDiv>\n          <Select label=\"Provincia\"           value={province} onChange={setProvince}     options={provinces} />\n          <Select label=\"Municipio\"           value={city} onChange={setCity}             options={cities} />\n      \n          <Field  label=\"Código postal\"       bind={[postalCode, setPostalCode]} type=\"number\" validator={Valid.postalCode(postalCode)}\n          placeholder={branch.address.postalCode} />\n          <Field  label=\"Calle\"               bind={[street, setStreet]}         validator={Valid.names(street)}\n          placeholder={branch.address.street}                          />\n          <Field  label=\"Altura\" bind={[addressNumber, setAddressNumber]}         type=\"number\" validator={Valid.addressNumber(addressNumber)}\n           placeholder={branch.address.addressNumber.toString()}/>\n        </FlexDiv>\n\n      </Retractable>\n\n      <Retractable label=\"Información de contacto\" sync={boolContact} \n      onClick={(state:boolean)=>{setBoolContact(state); setBoolAddress(false); setBoolPreferences(false);}}>\n\n        <FlexDiv>\n          <Field label=\"Correo electrónico\" bind={[email, setEmail]} type=\"email\" validator={Valid.email(email)}\n          placeholder={branch.email} />\n          <Field label=\"Número de teléfono\" bind={[phone, setPhone]} type=\"tel\"   validator={Valid.phone(phone)}\n          placeholder={branch.phone}  />\n        </FlexDiv>\n\n      </Retractable>\n\n      <Retractable label=\"Personalización (opcional)\" sync={boolPreferences} \n      onClick={(state:boolean)=>{setBoolPreferences(state); setBoolAddress(false); setBoolContact(false);}}>\n\n        <FlexDiv>\n          <Image label=\"Foto del lugar\" img={photo} setter={setPhoto} fallback={defaultPhoto} />\n          <Image label=\"Logo\" img={logo} setter={setLogo} fallback={defaultLogo} />\n        </FlexDiv>\n        <Color label=\"Color de los documentos comerciales\" value={color} onChange={setColor} />\n        \n\n      </Retractable>\n\n\n      <Message type=\"error\" message={error} />\n\n      {success?<Message type=\"success\" message={`Se han guardado los datos de \"${name?name:branch.name}\"`} />:\n      loading?<Loading />:<Button type=\"submit\">Guardar</Button>}\n    </Form>\n  );\n}","import React from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport branch from './models/branch';\n//UI.\nimport BranchBanner from \"./components/BranchBanner/BranchBanner\";\nimport BranchPoints from \"./components/BranchPoints/BranchPoints\";\nimport EditBranch from './EditBranch';\nimport { BiChevronLeft } from \"react-icons/bi\";\n\n\n\n/**Menú para visualizar y cambiar datos de una sucursal y sus puntos de venta.*/\nexport default function ManageBranch({branch}:{branch:branch}): JSX.Element {\n\n  const navigate = useNavigate();\n\n  const manageBranch = (\n    <>\n    <BranchBanner branch={branch} />\n    <BranchPoints IDBranch={branch.ID} />\n    </>\n  )\n\n  return (\n    <>\n    <BiChevronLeft onClick={() => navigate(-1)} style={{margin:\".2rem\", fontSize:\"2rem\", color:\"rgb(44,44,44)\",cursor:\"pointer\"}} />\n    <Routes>\n      <Route index                            element={manageBranch} />\n      <Route path={\"/editar\"}                 element={<EditBranch branch={branch} />} />\n    </Routes>\n    </>\n  );\n}","import React from \"react\";\nimport './BranchPreviewItem.css';\nimport defaultPhoto from 'assets/svg/default-photo.svg';\n\ntype props = {\n    title: string,\n    subtitle: string,\n    image: Blob,\n    onClick?: Function\n}\n\n/**\n * Un cuadro con una imágen, un título y subtitulo en la parte inferior.\n * @param props.title      - El título del cuadro.\n * @param props.subtitle   - El subtítulo.\n * @param props.image      - La imágen de fondo, en base 64.\n * @param props.onClick    - Función de evento de clic.\n */\nexport default function BranchPreviewItem({ title, subtitle, image, onClick }: props): JSX.Element {\n\n    return (\n        \n        <div data-component='branch-preview-item'>\n\n            <div>\n            <a onClick={()=>onClick()}>\n                <img src={image.size>10?URL.createObjectURL(image):defaultPhoto} />\n                <p><abbr title={title}>{title}</abbr></p>\n                <span><p><abbr title={subtitle}>{subtitle}</abbr></p></span>\n            </a>\n            </div>   \n        </div>\n    )\n}","import { base64ToBlob   } from 'utilities/conversions';\nimport branch from '../models/branch';\nimport listOfBranches from \"../models/listOfBranches\";\n\n/**Adapta un json de lista de sucursales a un objeto de lista de sucursales. */\nexport default async function jsonToListOfBranches(json: string): Promise<listOfBranches> {\n    const listOfBranches = JSON.parse(json);\n\n    return {\n        branches: await Promise.all(listOfBranches.content.map(async (branch: any): Promise<branch> => { return {\n            ID:    branch.branchId,\n            name:  branch.fantasyName,\n            email: branch.email,\n            phone: branch.phone,\n            address: {\n                province:      branch.province,\n                city:          branch.city,\n                postalCode:    branch.postalCode,\n                street:        branch.street,\n                addressNumber: branch.addressNumber,\n            },\n            photo:  await base64ToBlob(branch.photo),\n            preferenceColor:  branch.preferenceColor\n        }})),\n        totalPages: listOfBranches.totalPages,\n        last: listOfBranches.last\n    }\n}","import Response from 'models/Response';\nimport ajax from 'ports/ajax';\nimport { IDTrader } from 'utilities/constants';\nimport jsonToListOfBranches from '../adapters/jsonToListOfBranches';\n\nconst baseUrl = 'branches/traders/'+IDTrader+'?index=';\ntype sort = (\"createdAt\"|\"name\"|\"street\");\ntype order= (\"asc\"|\"desc\");\n\n/**Recupera la lista de sucursales de un comerciante.\n * @param index - La página de la lista.\n * @param sort  - El campo en base al cual ordenar la lista.\n * @param order - El modo de ordenar, ascendente o descendente.\n*/\nexport default async function getBranches(index:number, sort:sort, order:order): Promise<Response> {\n\n    const response = await ajax('GET', baseUrl+`${index}&size=10&sort=${sort}&order=${order}`, true);\n\n    if (response.ok) return {...response, content: await jsonToListOfBranches(response.content)}\n    return {...response, content: null};\n}","import React, { useEffect, useState } from \"react\";\nimport NewPoint from './NewBranch';\n//Componentes.\nimport ManageBranch from './ManageBranch';\nimport BranchPreviewItem from \"./components/BranchPreviewItem/BranchPreviewItem\";\n//Servicios.\nimport getBranches from './services/getBranches';\n//Tipos.\nimport branch from './models/branch';\nimport listOfBranches from './models/listOfBranches';\n//GUI.\nimport { Pagination, Plus } from \"components/standalone\";\nimport { Section, FlexDiv } from \"components/wrappers\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport { Dropdown } from \"components/formComponents\";\nimport { BiRefresh } from \"react-icons/bi\";\n\n\nconst sortOptions = [\n  {name: \"Ordenar por fecha\",           value: \"createdAt\"},\n  {name: \"Ordenar por nombre\",          value: \"name\"},\n  {name: \"Ordenar por nombre de calle\", value: \"street\"}\n]\n\n/**Muestra una lista de sucursales con opciones para crear, ver y editar. */\nexport default function Branches(): JSX.Element {\n\n  const navigate = useNavigate();\n\n  //Lista de sucursales.\n  const [branches, setBranches]:\n  [branch[], React.Dispatch<React.SetStateAction<branch[]>>] = useState([]);\n\n  //Sucursal seleccionada.\n  //TODO: hacer que funcione sin estos dos valores, tomando en su lugar los datos de la URL.\n  const [selectedBranch, setSelectedBranch]:\n  [branch, React.Dispatch<React.SetStateAction<branch>>] = useState(undefined);\n  const [selectedBranchID, setSelectedBranchID] = useState(-1);\n\n  //Datos de paginación.\n  const [page, setPage] =             useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [last, setLast] =             useState(true);\n  const [sortBy, setSortBy]: [(\"createdAt\"|\"name\"|\"street\"), React.Dispatch<React.SetStateAction<(\"createdAt\"|\"name\"|\"street\")>>] \n  = useState(\"createdAt\");\n\n  //Recuperar la lista de sucursales.\n  useEffect(requestListOfBranches, [page, sortBy]);\n\n  function requestListOfBranches(): void {\n    getBranches(page, sortBy, \"asc\").then(response => {\n      if (response.ok) {\n        const listOfBranches: listOfBranches = response.content;\n        setBranches   (listOfBranches.branches);\n        setTotalPages (listOfBranches.totalPages);\n        setLast       (listOfBranches.last); \n      }\n    });\n  }\n\n  /**Pantalla de selección de opciones de punto de venta. */\n  const selectionScreen = \n  <Section label=\"Administrar instalaciones y puntos de venta\">\n    {!branches? null :\n      <FlexDiv justify=\"flex-start\">\n        <Pagination page={page} setPage={setPage} totalPages={totalPages} last={last} />\n        <Dropdown options={sortOptions} value={sortBy} onChange={setSortBy}/>\n        <BiRefresh onClick={requestListOfBranches} style={{color:\"#888\", fontSize:\"1.8rem\", cursor:\"pointer\"}}/>\n      </FlexDiv>\n    }\n    <FlexDiv justify=\"flex-start\" align=\"flex-start\">\n\n      <Plus link=\"./nuevo\" />\n  \n      {branches?.map((branch, index) => \n      <BranchPreviewItem\n        key={index}\n        title={branch.name}\n        subtitle={branch.address.city + ' ' + branch.address.street + ' ' + branch.address.addressNumber}\n        image={branch.photo}\n        onClick={() => viewBranch(branch)}\n      />)}\n          \n    </FlexDiv>\n  </Section>;\n\n\n\n  function viewBranch(branch: branch) {\n    setSelectedBranchID(branch.ID);\n    setSelectedBranch(branch);\n    navigate(''+branch.ID);\n  }\n\n  return (\n    <Routes>\n      <Route index                            element={selectionScreen} />\n      <Route path={\"/nuevo\"}                  element={<NewPoint />} />\n      <Route path={''+selectedBranchID+'/*'}  element={<ManageBranch branch={selectedBranch} />} />\n    </Routes>\n  );\n}","import React from 'react';\nimport { Navigate, Route, Routes} from 'react-router-dom';\n\n//Componentes.\nimport {LoggedHeader, Subheader } from './components';\n\n//Stateless.\nimport { Main } from 'components/wrappers';\nimport { Footer, NavBar } from 'components/standalone';\nimport {MdOutlineHomeWork, MdMonetizationOn} from 'react-icons/md';\n\n//Páginas.\nimport OperationSelection from 'pages/Operation/OperationSelection';\nimport Branches  from 'pages/Branches/Branches';\n\nconst paths = {\n    operation:  \"/operacion\",\n    branches:   \"/sucursales\",\n}\n\nconst tabs = [\n    {path:paths.operation, icon: <MdMonetizationOn />, label:'operación'},\n    {path:paths.branches,  icon: <MdOutlineHomeWork />,  label:'sucursales'},\n]\n\n/**Devuelve la página principal dependiente de una sesión iniciada para mostrarse.\n * Contiene todas las vistas principales de la aplicación.\n * */\nexport default function Home():JSX.Element {\n\n    return (\n    <>  \n        <LoggedHeader />\n        <Subheader />\n        \n        <Main \n        menu={<NavBar tabs={tabs} />} \n        content={\n\n            <Routes>\n                <Route index element={<Navigate to={'.'+paths.operation}/>}        />\n\n                <Route path={paths.operation+\"/*\"}  element={<OperationSelection />}        />\n                <Route path={paths.branches +\"/*\"}  element={<Branches  />}        />\n                <Route path=\"*\"                     element={<Navigate to={\"/\"} />}/>\n            </Routes>\n\n        } />\n        \n        <Footer />\n    </>)\n}","/** Forza la expiración de los tokens de sesión. Elimina la memoria local. Recarga la ubicación actual al finalizar.*/\nexport default function closeSession(): void {\n    for (let cookie of document.cookie.split(\";\")) {\n      document.cookie = cookie + \"=; Secure; path=/; expires=\" + new Date(0).toUTCString();\n    }\n    localStorage.clear();\n    window.location.reload();\n}","/**\n * Define métodos de validación de datos.\n * Cada método devuelve un boolean significando la validez del dato argumentado.\n * Opcionalmente llama a funciones pasando como argumento un mensaje de error.\n*/\nexport default class Valid {\n  public static names(name: string, setError?: Function): boolean {\n    if (name?.trim().length <= 20 && name.trim().length >= 3) return true;\n    if (setError) setError(\"El nombre debe ser de entre 3 y 20 caracteres\");\n    return false;\n  }\n\n  public static email(email: string, setError?: Function): boolean {\n    if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) return true;\n    if (setError) setError(\"Ingrese una dirección válida de email\");\n    return false;\n  }\n\n  public static password(password: string, setError?: Function): boolean {\n    if (password?.length <= 40 && password.length >= 8) return true;\n    if (setError) setError(\"La contraseña debe ser de entre 8 y 40 caracteres\");\n    return false;\n  }\n\n  public static image(image: File, setError?: Function):boolean {\n    if (!image) return true;\n    if (image?.size < 2097152) return true;\n    if (setError) setError(\"La imágen no debe superar los 2MB\");\n    return false;\n  }\n\n  public static CUIT(CUIT: string, setError?: Function): boolean {\n    CUIT = CUIT?.replace(/ |\\.|-/g, \"\");\n    if (/^[0-9]{2}[1-9][0-9]{7}[0-9]$/.test(CUIT)) return true;\n    if (setError) setError(\"Ingrese una clave válida\");\n    return false;\n\n  }\n\n  public static sellConditions(conditions: string, setError?: Function): boolean {\n    if (\"Al contado Cuenta corriente Cheque Pagaré Otro\") return true;\n    if (setError) setError(\"Las condiciones de venta deben ser: Al contado, Cuenta corriente, Cheque, Pagaré u Otro\");\n    return false;\n\n  }\n\n  public static vatCategory(vatCategory: string, setError?: Function): boolean {\n    if ( vatCategory === \"Responsable Monotributista\" \n      || vatCategory === \"Responsable Inscripto\"\n      || vatCategory === \"Consumidor Final\"\n      || vatCategory === \"Sujeto Exento\"\n    ) return true;\n    if (setError) setError(\"Seleccione una categoría\");\n    return false;\n  }\n\n  public static address(address: string): boolean {\n    return address?.length <= 40 && address.length >= 4;\n  }\n\n  public static postalCode(postalCode: string, setError?: Function): boolean {\n    if  (/^\\d{4}$/.test(postalCode)) return true;\n    if (setError) setError(\"Ingrese un código postal de 4 dígitos\");\n    return false;\n  }\n\n  public static phone(phone: string, setError?: Function): boolean {\n    phone = phone?.replace(/ |\\.|-/g, \"\");\n    if (phone?.trim().length === 0) return true;\n    if (/^\\d{10}$/.test(phone)) return true;\n    if (setError) setError(\"Ingrese un número telefónico de 10 dígitos\");\n    return false;\n  }\n\n  public static website(url: string, setError?: Function): boolean {\n    if (url?.trim().length === 0) return true;\n    var regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n    if (regexp.test(url)) return true;\n    if (setError) setError(\"Ingrese un URL válido\");\n    return false;\n  }\n\n  public static addressNumber(addressNumber: number, setError?: Function): boolean {\n    if (/^[1-9]{1}\\d{0,4}$/.test(addressNumber?.toLocaleString())) return true;\n    if (setError) setError(\"Ingrese un número de dirección\");\n    return false;\n  }\n\n  public static addressHeight(addressHeight: string, setError?: Function): boolean {\n    if (/^[\\-]?\\d{1,3}$/.test(addressHeight)) return true;\n    if (setError) setError(\"Ingrese una altura válida\");\n    return false;\n  }\n\n  public static hexColor(hexColor: string, setError?: Function): boolean {\n    if (/^#[\\da-f]{6}$/.test(hexColor)) return true;\n    if (setError) setError(\"Ingrese un color válido.\");\n    return false;\n  }\n\n  public static date(date: string, setError?: Function): boolean {\n    if (/^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/.test(date)) return true;\n    if (setError) setError(\"Ingrese una fecha válida.\");\n    return false;\n  }\n}","//Métodos de conversión y formateo.\n\n/**Devuelve un string base 64 a partir de un valor tipo File. */\nexport const fileToBase64 = (file: Blob) => new Promise<string>((resolve, reject): void => {\n    const reader = new FileReader();\n    if (!file) return resolve(undefined);\n    reader.onerror = reject;\n    reader.onload = () => resolve(reader.result+'');\n    reader.readAsDataURL(file);\n});\n\n\n/**Devuelve un Blob a partir de un string en base 64.*/\nexport async function base64ToBlob(base64String:string): Promise<Blob> {\n    const base64Response = await window.fetch(base64String);\n    return await base64Response.blob();\n}\n\n\n/**Convierte un string de CUIT al formato AA-BB.BBB.BBB-A. */\nexport const toFormattedCUIT = (code:string) => {\n    const c = code.replace(/ |\\.|-/g, \"\");\n\n    return c? c.slice(0, 2) + '-' +\n    c.slice(2, 4) + '.' + c.slice(4, 7) + '.' + c.slice(7, 10) +\n    '-' + c.charAt(10) : '';\n}\n\nexport function toFourDigitNumber(number: number): string {\n    switch(number.toString().length) {\n        case 1: return \"000\"+number;\n        case 2: return \"00\"+number;\n        case 3: return \"0\"+number;\n        default: return number.toString().slice(0,number.toString().length-4); \n    }\n}"],"names":["localStorage","getItem","Response","base64ToBlob","ajax","sessionStorage","response","content","status","ok","ProfileMenu","useState","defaultImg","img","setImg","useEffect","getUserAvatar","then","size","URL","createObjectURL","active","setActive","onOutsideClick","id","onMouseDown","src","className","to","onClick","closeSession","type","LoggedHeader","logo","alt","Subheader","parseFloat","link","title","style","flex","marginTop","fontSize","display","textAlign","color","Object","freeze","senderCUIT","senderAddress","senderName","senderContact","senderVATCategory","startOfActivities","receiverCUIT","receiverName","receiverAddress","receiverVATCategory","receiverPostalCode","receiverCity","productTable","observations","seller","sellConditions","deadline","shippingAddress","carrier","remittance","vat","paymentMethods","paymentImputation","detailOfValues","paymentAddress","paymentTime","description","amount","noProtest","timeDelay","crossed","Filter","by","classCode","children","bool","operationFilters","includes","getOperationFormTitle","toSend","isValidOperation","operation","documentClassCode","setError","undefined","IDPointOfSale","no","currentOperationIncludes","Valid","thirdParty","CUIT","name","address","VATCategory","postalCode","city","i","quantity","length","price","receiptXTables","cash","documents","check","forEach","cell","index","documentNumber","paid","bank","depositDate","messaje","thisProperty","IDTrader","parseInt","operationToJson","filteredOperation","toFormattedCUIT","contact","map","_","detail","VAT","JSON","stringify","documentClassCodeToDocumentName","cc","inSpanish","postOperation","subrepository","jsonToListOfBranchesAndPoints","json","usePointOfSaleNumberInsteadOfID","listOfBAP","parse","branch","street","addressNumber","value","branchID","subOptions","pointsOfSale","point","toFourDigitNumber","pointOfSaleNumber","pointOfSaleId","getListOfBranchesAndPoints","OperationForm","IDOperation","setIDOperation","navigate","useNavigate","setLoading","message","setBranchesAndPoints","error","loading","branchesAndPoints","IDBranch","setOperation","setThirdParty","onSubmit","label","options","onChange","ID","subValue","subOnChange","fallback","sublabel","margin","cursor","initial","bind","validator","note","legend","thead","tbody","newTable","table","operationTemp","setProductTable","maxRows","justify","Unidades","num","Decenas","decena","Math","floor","unidad","DecenasY","strSin","numUnidades","Centenas","centenas","decenas","Seccion","divisor","strSingular","strPlural","cientos","resto","letras","Millones","strMillones","strMiles","strCentenas","Miles","numberToWords","data","numero","enteros","centavos","round","letrasCentavos","letrasMonedaPlural","letrasMonedaSingular","letrasMonedaCentavoPlural","letrasMonedaCentavoSingular","InvoiceLikeDocument","document","productSubtotal","operationData","reduce","prev","sum","productTotal","backgroundColor","metadata","preferenceColor","sender","documentType","documentName","toUpperCase","dateOfIssue","split","code","receiver","row","Fragment","toString","toExponential","toFixed","align","toLowerCase","Ticket","jsonToDocument","docCC","doc","operationNumber","issueDate","senderCode","senderCuit","senderVatCategory","receiverCode","receiverVatCategory","products","docID","params","Document","useSearchParams","get","documentIdentifier","documentReference","useRef","comercialDocument","setComercialDocument","getDocument","ref","overflow","AnyComercialDocument","dcc","nodeReference","filename","Fa","Nc","Nd","Tk","Oc","Rm","Rx","Rs","Pa","Ch","default","getColorByDocClassCode","documentColors","DocumentHistoryItem","item","docClassCode","toLocaleLowerCase","jsonToDocumentHistory","history","operationId","documentClass","receiverCuit","filters","documentClasses","DocumentHistory","setIDBranch","setPointOfSaleNumber","setDocumentClass","documentHistory","setDocumentHistory","getDocumentHistory","OperationSelectionItem","disabled","e","preventDefault","borderColor","charAt","OperationSelection","element","OperationMainScreen","path","branchToJson","email","phone","province","fileToBase64","photo","postBranch","getListOfProvinces","setStateAction","fetch","listOfProvinces","provincias","provincia","nombre","getListOfCitiesByProvinceName","provinceName","listOfCities","municipios","municipio","NewBranch","success","setSuccess","setName","setProvince","setCity","setPostalCode","setStreet","number","setNumber","setEmail","setPhone","setPhoto","setLogo","setColor","provinces","setProvinces","cities","setCities","boolAddress","setBoolAddress","boolContact","setBoolContact","boolPreferences","setBoolPreferences","submit","placeholder","sync","state","setter","defaultPhoto","defaultLogo","callback","BranchBanner","onConfirm","deleteBranch","postPointOfSale","page","deletePointOfSale","IDPoint","BranchPoints","points","setPoints","setPage","loadPointsOfSaleList","getPointsOfSale","width","totalPages","last","requestDeletePointOfSale","updatedBranchToJson","updatedName","updatedEmail","updatedPhone","updatedProvince","updatedCity","updatedPostalCode","updatedStreet","updatedAddressNumber","updatedPhoto","updatedLogo","updatedPreferenceColor","updateBranch","updatedBranch","EditBranch","setAddressNumber","putBranch","getBranchLogo","convertedLogo","ManageBranch","manageBranch","BranchPreviewItem","subtitle","image","jsonToListOfBranches","listOfBranches","Promise","all","branchId","fantasyName","branches","baseUrl","sort","order","sortOptions","Branches","setBranches","selectedBranch","setSelectedBranch","selectedBranchID","setSelectedBranchID","setTotalPages","setLast","sortBy","setSortBy","requestListOfBranches","getBranches","selectionScreen","viewBranch","paths","tabs","icon","Home","menu","cookie","Date","toUTCString","clear","window","location","reload","trim","test","password","replace","conditions","vatCategory","url","toLocaleString","addressHeight","hexColor","date","file","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","base64String","base64Response","blob","c","slice"],"sourceRoot":""}