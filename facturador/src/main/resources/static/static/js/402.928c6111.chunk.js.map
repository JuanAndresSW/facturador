{"version":3,"file":"static/js/402.928c6111.chunk.js","mappings":"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","sources":["pages/Account/services/deleteAccount.ts","pages/Account/services/getLocalUserAvatar.ts","pages/Account/adapters/jsonToTraderData.ts","pages/Account/services/getTraderData.ts","pages/Account/adapters/editedAccountToJson.ts","pages/Account/services/putAccount.ts","pages/Account/Account.tsx","services/closeSession.ts","utilities/Valid.ts","utilities/conversions.ts","../javascript/esm|/home/juan/Documents/projects/facturador/facturador-masmas/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../javascript/esm|/home/juan/Documents/projects/facturador/facturador-masmas/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import ajax from 'ports/ajax';\nimport closeSession from 'services/closeSession';\nimport Response from 'models/Response';\n\n/**Solicita la eliminaci√≥n de la cuenta.*/\nexport default async function deleteAccount(): Promise<Response> {\n    const response = await ajax(\"DELETE\", `accounts/${sessionStorage.getItem(\"username\")}`, true);\n       \n    if (response.status === 204) closeSession();\n    return response;\n}","import Response from 'models/Response';\nimport { base64ToBlob } from 'utilities/conversions';\n\n/**Recupera un Blob a partir de un string almacenado en localStorage, correspondiente a el avatar de usuario. */\nexport default async function getLocalUserAvatar(): Promise<Response> {\n\n    if (localStorage.getItem(\"avatar\")) {\n        const blob = await base64ToBlob(localStorage.getItem('avatar'));\n        return new Response(\"\", blob, 200);\n    }   \n}\n","import traderData from '../models/traderData';\n\n/**Adapta los datos recibidos del comerciante a un formato esperado por el front-end. */\nexport default function jsonToTraderData(json: string): traderData {\n    const traderData = JSON.parse(json);\n    return {\n        businessName:   traderData.businessName,\n        VATCategory:    traderData.vatCategory,\n        CUIT:           traderData.cuit\n    }\n}","import getToken from \"../../../services/getToken\";\nimport Response from \"models/Response\";\nimport ajax from 'ports/ajax';\nimport jsonToTraderData from '../adapters/jsonToTraderData';\n\n/**Recupera informaci√≥n del comerciante de la cuenta.*/\nexport default async function getTraderData(): Promise<Response> {\n    const response = await ajax(\"GET\", `accounts/${sessionStorage.getItem(\"username\")}`, true);\n\n    if (response.status===200) return {...response, content: jsonToTraderData(response.content)}\n    return response;\n \n}","import { fileToBase64 } from 'utilities/conversions';\nimport editedAccount from '../models/editedAccount';\n\n/**Entrega a una cuenta el formato esperado por el servidor para actualizarla. */\nexport default async function editedAccountToJson(acc: editedAccount): Promise<string> {\n  \n    return JSON.stringify({\n        user: {\n            username:         sessionStorage.getItem(\"username\"),\n            updatedUsername:  acc.user.updatedUsername?     acc.user.updatedUsername.trim()       : null,\n            password:         acc.user.password?            acc.user.password.trim()              : null,\n            updatedPassword:  acc.user.updatedPassword?     acc.user.updatedPassword.trim()       : null,\n            updatedAvatar:    acc.user.updatedAvatar? await fileToBase64(acc.user.updatedAvatar)  : \"undefined\"\n        },\n        trader: {\n            updatedBusinessName: acc.trader.updatedBusinessName? acc.trader.updatedBusinessName.trim()   : null,\n            updatedVatCategory:  acc.trader.updatedVATCategory?  acc.trader.updatedVATCategory.trim()    : null,\n        }\n    });\n}","import ajax from 'ports/ajax';\nimport editedAccount from '../models/editedAccount';\nimport editedAccountToJson from '../adapters/editedAccountToJson';\nimport Response from 'models/Response';\n\n/**Actualiza uno o m√°s datos de la cuenta. */\nexport default async function putAccount(account: editedAccount): Promise<Response> {\n    const response = await ajax(\"PUT\", \"accounts\", true, await editedAccountToJson(account));\n  \n    if (response.status === 204)\n    localStorage.removeItem('avatar');\n \n    return response;\n\n}\n\n","//React.\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n//Servicios.\nimport deleteAccount from './services/deleteAccount';\nimport getLocalUserAvatar from './services/getLocalUserAvatar';\nimport getTraderData from './services/getTraderData';\nimport putAccount from './services/putAccount';\n//Validaci√≥n.\nimport Valid from \"utilities/Valid\";\n//GUI.\nimport { Button, Field, Form, Image, Message, Radio } from \"components/formComponents\";\nimport { Loading } from \"components/standalone\";\nimport { Confirm, FlexDiv, Retractable, Section } from \"components/wrappers\";\nimport { BiChevronLeft } from \"react-icons/bi\";\n//Modelos.\nimport editedAccount from \"./models/editedAccount\";\nimport traderData from \"./models/traderData\";\n\n\n/**Un formulario que permite cambiar datos de la cuenta / eliminar la cuenta de usuario y el comerciante. */\nexport default function Account(): JSX.Element {\n\n    /*DATOS***************************************************************/\n\n    const navigate =                useNavigate(); \n    const [loading, setLoading] =   useState(false);\n    const [success, setSuccess] =   useState(false);\n    const [deleteSuccess, setDeleteSuccess] =   useState(false); \n    \n\n    //Errores.\n    const [error, setError] =                       useState(\"\");\n    const [deleteError, setDeleteError] =           useState(\"\");\n    //Datos del usuario.\n    const [avatar, setAvatar] =                     useState(undefined);\n    const [newUsername, setNewUsername] =           useState('');\n    const [password, setPassword] =                 useState(\"\");\n    const [newPassword, setNewPassword] =           useState(\"\");\n    const [confirmPassword, setConfirmPassword] =   useState(\"\");\n    //Datos del comerciante.\n    const [businessName, setBusinessName] =         useState(\"\");\n    const [newBusinessName, setNewBusinessName] =   useState(\"\");\n    const [VATCategory, setVatCategory] =           useState(\"\");\n    const [newVATCategory, setNewVATCategory] =     useState(\"\");\n    const [CUIT, setCUIT] =                         useState(\"\");\n\n    //Pedir los datos actuales en el primer renderizado.\n    useEffect(getAvatarAndTraderData);\n    \n    function getAvatarAndTraderData() {\n        getLocalUserAvatar().then(response => {\n            if (response.ok && !avatar) setAvatar(response.content);\n        });\n\n        getTraderData().then(response=> {\n            if (!response.ok) return setError(response.message)\n            \n            const traderData: traderData = response.content;\n            setBusinessName (traderData.businessName);\n            setVatCategory  (traderData.VATCategory);\n            setCUIT         (traderData.CUIT);\n        });\n\n    }\n\n    /*VALIDACI√ìN***************************************************************/\n\n    function submitIfEditedAccountIsValid():void {\n        if (!Valid.image(avatar, setError)) return;\n        if (newUsername && !Valid.names(newUsername, setError)) return;\n        if (Valid.password(password)) {\n            if (!Valid.password(newPassword, setError)) return;\n            if (newPassword!==confirmPassword) return setError(\"Las contrase√±as no coinciden\");\n        }\n        if (newBusinessName && !Valid.names(newBusinessName)) return setError(\"La raz√≥n social debe ser de entre 3 y 20 caracteres\");\n        if (newVATCategory && !Valid.vatCategory(newVATCategory, setError)) return;\n        submit();\n    }\n\n    /*COMUNICACI√ìN***************************************************************/\n\n    //Env√≠a los datos al servidor.\n    async function submit() {\n        setLoading(true);\n        const account: editedAccount = {\n            user: {\n                updatedUsername:  newUsername,\n                password:         password,\n                updatedPassword:  newPassword,\n                updatedAvatar:    avatar,\n            },\n            trader: {\n                updatedBusinessName: newBusinessName,\n                updatedVATCategory:  newVATCategory,\n            }\n        } \n        const response = await putAccount(account);\n        \n        if (!response.ok) return setError(response.message);\n        setSuccess(true);\n        if (newUsername) sessionStorage.setItem(\"username\", newUsername);\n    }\n\n    //Elimina la cuenta de usuario.\n    async function requestAccountDeletion() {\n        const response = await deleteAccount();\n        if (!response.ok) setDeleteError(response.message);\n        else setDeleteSuccess(true);\n    }\n\n\n    /*FORMULARIO***************************************************************/\n\n    return (\n        <>\n   \n        <Form title=\"Opciones de la cuenta\" onSubmit={submitIfEditedAccountIsValid}>\n            <BiChevronLeft onClick={() => navigate(\"/inicio\")} style={{margin:\"1rem\", fontSize:\"2rem\", color:\"rgb(44,44,44)\",cursor:\"pointer\"}} />\n                \n            <Image label='' setter={setAvatar} img={avatar} />\n\n            <Field bind={[newUsername, setNewUsername]} label=\"Nombre\"\n            placeholder={sessionStorage.getItem('username')}\n            validator={Valid.names(newUsername)} />\n\n            <Field bind={[password, setPassword]} type=\"password\"\n            label=\"Para cambiar tu contrase√±a, introduce la contrase√±a actual:\"\n            validator={Valid.password(password)} />\n            {!Valid.password(password) ? null:\n            <>\n            <Field bind={[newPassword, setNewPassword]} label=\"Nueva contrase√±a\" type=\"password\"\n            validator={Valid.password(newPassword)} />\n            <Field bind={[confirmPassword, setConfirmPassword]} \n            label=\"Confirmar nueva contrase√±a\" type=\"password\"\n            validator={confirmPassword === newPassword} />\n            </>}\n\n            <Section label=\"Datos del comercio\">\n                <p style={{textAlign:\"center\", cursor:\"default\"}}>C.U.I.T.: {CUIT}</p>\n\n                <Field bind={[newBusinessName, setNewBusinessName]} label=\"Raz√≥n social\"\n                placeholder={businessName} validator={Valid.names(newBusinessName)} />\n                        \n                <Radio legend={\"Actualmente: \"+VATCategory+\". Nueva categor√≠a:\"} bind={[newVATCategory, setNewVATCategory]}\n                options={[\"Responsable Inscripto\", \"Responsable Monotributista\"]} />\n            </Section>\n\n            <Message type=\"error\" message={error} />\n\n            {success? <Message type=\"success\" message=\"Se han guardado los cambios\"/>:\n            loading?<Loading />:\n            <Button type=\"submit\">Confirmar cambios</Button>}\n            \n\n            <p style={{textAlign:\"center\", color:\"#fff\", cursor:\"default\"}}>...</p>\n            <Retractable label=\"Otras opciones\" initial={false}>\n                \n\n                <Message type=\"error\" message={deleteError} />\n\n                {deleteSuccess? <Message type=\"success\" message={`Se ha eliminado la cuenta`}/>:\n                loading? <Loading /> :\n                \n                <FlexDiv justify='space-between'>\n\n                    <Confirm label=\"¬øEst√° seguro de que quiere eliminar su cuenta? Esta acci√≥n es irreversible\"\n                    onConfirm={requestAccountDeletion}>\n                        <Button type=\"delete\">Borrar la cuenta</Button>\n                    </Confirm>\n                </FlexDiv>}\n                \n\n            </Retractable>\n        </Form>\n        </>\n    )\n}","/** Forza la expiraci√≥n de los tokens de sesi√≥n. Elimina la memoria local. Recarga la ubicaci√≥n actual al finalizar.*/\nexport default function closeSession(): void {\n    for (let cookie of document.cookie.split(\";\")) {\n      document.cookie = cookie + \"=; Secure; path=/; expires=\" + new Date(0).toUTCString();\n    }\n    localStorage.clear();\n    window.location.reload();\n}","/**\n * Define m√©todos de validaci√≥n de datos.\n * Cada m√©todo devuelve un boolean significando la validez del dato argumentado.\n * Opcionalmente llama a funciones pasando como argumento un mensaje de error.\n*/\nexport default class Valid {\n  public static names(name: string, setError?: Function): boolean {\n    if (name?.trim().length <= 20 && name.trim().length >= 3) return true;\n    if (setError) setError(\"El nombre debe ser de entre 3 y 20 caracteres\");\n    return false;\n  }\n\n  public static email(email: string, setError?: Function): boolean {\n    if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) return true;\n    if (setError) setError(\"Ingrese una direcci√≥n v√°lida de email\");\n    return false;\n  }\n\n  public static password(password: string, setError?: Function): boolean {\n    if (password?.length <= 40 && password.length >= 8) return true;\n    if (setError) setError(\"La contrase√±a debe ser de entre 8 y 40 caracteres\");\n    return false;\n  }\n\n  public static image(image: Blob | File, setError?: Function):boolean {\n    if (!image) return true;\n    if (image?.size < 2097152) return true;\n    if (setError) setError(\"La im√°gen no debe superar los 2MB\");\n    return false;\n  }\n\n  public static CUIT(CUIT: string, setError?: Function): boolean {\n    CUIT = CUIT?.replace(/ |\\.|-/g, \"\");\n    if (/^[0-9]{2}[1-9][0-9]{7}[0-9]$/.test(CUIT)) return true;\n    if (setError) setError(\"Ingrese una clave v√°lida\");\n    return false;\n\n  }\n\n  public static sellConditions(conditions: string, setError?: Function): boolean {\n    if (\"Al contado Cuenta corriente Cheque Pagar√© Otro\") return true;\n    if (setError) setError(\"Las condiciones de venta deben ser: Al contado, Cuenta corriente, Cheque, Pagar√© u Otro\");\n    return false;\n\n  }\n\n  public static vatCategory(vatCategory: string, setError?: Function): boolean {\n    if ( vatCategory === \"Responsable Monotributista\" \n      || vatCategory === \"Responsable Inscripto\"\n      || vatCategory === \"Consumidor Final\"\n      || vatCategory === \"Sujeto Exento\"\n    ) return true;\n    if (setError) setError(\"Seleccione una categor√≠a\");\n    return false;\n  }\n\n  public static address(address: string): boolean {\n    return address?.length <= 40 && address.length >= 4;\n  }\n\n  public static postalCode(postalCode: string, setError?: Function): boolean {\n    if  (/^\\d{4}$/.test(postalCode)) return true;\n    if (setError) setError(\"Ingrese un c√≥digo postal de 4 d√≠gitos\");\n    return false;\n  }\n\n  public static phone(phone: string, setError?: Function): boolean {\n    phone = phone?.replace(/ |\\.|-/g, \"\");\n    if (phone?.trim().length === 0) return true;\n    if (/^\\d{10}$/.test(phone)) return true;\n    if (setError) setError(\"Ingrese un n√∫mero telef√≥nico de 10 d√≠gitos\");\n    return false;\n  }\n\n  public static website(url: string, setError?: Function): boolean {\n    if (url?.trim().length === 0) return true;\n    var regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n    if (regexp.test(url)) return true;\n    if (setError) setError(\"Ingrese un URL v√°lido\");\n    return false;\n  }\n\n  public static addressNumber(addressNumber: number, setError?: Function): boolean {\n    if (!addressNumber) return true;\n    if (/^[1-9]{1}\\d{0,4}$/.test(addressNumber?.toLocaleString())) return true;\n    if (setError) setError(\"Ingrese un n√∫mero de direcci√≥n\");\n    return false;\n  }\n\n  public static addressHeight(addressHeight: string, setError?: Function): boolean {\n    if (/^[-]?\\d{1,3}$/.test(addressHeight)) return true;\n    if (setError) setError(\"Ingrese una altura v√°lida\");\n    return false;\n  }\n\n  public static hexColor(hexColor: string, setError?: Function): boolean {\n    if (/^#[\\da-f]{6}$/.test(hexColor)) return true;\n    if (setError) setError(\"Ingrese un color v√°lido.\");\n    return false;\n  }\n\n  public static date(date: string, setError?: Function): boolean {\n    if (/^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/.test(date)) return true;\n    if (setError) setError(\"Ingrese una fecha v√°lida.\");\n    return false;\n  }\n}","//M√©todos de conversi√≥n y formateo.\n\n/**Devuelve un string base 64 a partir de un valor tipo File. */\nexport const fileToBase64 = (file: Blob) => new Promise<string>((resolve, reject): void => {\n    const reader = new FileReader();\n    if (!file) return resolve(undefined);\n    reader.onerror = reject;\n    reader.onload = () => resolve(reader.result+'');\n    reader.readAsDataURL(file);\n});\n\n\n/**Devuelve un Blob a partir de un string en base 64.*/\nexport async function base64ToBlob(base64String:string): Promise<Blob> {\n    const base64Response = await window.fetch(base64String);\n    return await base64Response.blob();\n}\n\n\n/**Convierte un string de CUIT al formato AA-BB.BBB.BBB-A. */\nexport const toFormattedCUIT = (code:string) => {\n    const c = code.replace(/ |\\.|-/g, \"\");\n\n    return c? c.slice(0, 2) + '-' +\n    c.slice(2, 4) + '.' + c.slice(4, 7) + '.' + c.slice(7, 10) +\n    '-' + c.charAt(10) : '';\n}\n\nexport function toFourDigitNumber(number: number): string {\n    switch(number.toString().length) {\n        case 1: return \"000\"+number;\n        case 2: return \"00\"+number;\n        case 3: return \"0\"+number;\n        default: return number.toString().slice(0,number.toString().length-4); \n    }\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["deleteAccount","ajax","sessionStorage","getItem","response","status","closeSession","localStorage","base64ToBlob","blob","Response","jsonToTraderData","json","traderData","JSON","parse","businessName","VATCategory","vatCategory","CUIT","cuit","content","editedAccountToJson","acc","user","updatedUsername","trim","password","updatedPassword","updatedAvatar","fileToBase64","username","updatedBusinessName","trader","updatedVatCategory","updatedVATCategory","stringify","putAccount","account","removeItem","Account","navigate","useNavigate","useState","loading","setLoading","success","setSuccess","deleteSuccess","setDeleteSuccess","error","setError","deleteError","setDeleteError","undefined","avatar","setAvatar","newUsername","setNewUsername","setPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setBusinessName","newBusinessName","setNewBusinessName","setVatCategory","newVATCategory","setNewVATCategory","setCUIT","ok","message","setItem","useEffect","getLocalUserAvatar","then","getTraderData","title","onSubmit","Valid","submit","onClick","style","margin","fontSize","color","cursor","label","setter","img","bind","placeholder","validator","type","textAlign","legend","options","initial","justify","onConfirm","document","cookie","split","Date","toUTCString","clear","window","location","reload","name","length","email","test","image","size","replace","conditions","address","postalCode","phone","url","addressNumber","toLocaleString","addressHeight","hexColor","date","file","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","base64String","fetch","base64Response","toFormattedCUIT","code","c","slice","charAt","toFourDigitNumber","number","toString","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}